{"version":3,"sources":["api/index.js","helpers/constants.js","helpers/functions.js","context/DataContext.js","components/icons/Cube.js","components/main/Logo.js","components/icons/Menu.js","components/buttons/BtnMenu.js","components/buttons/BtnNav.js","components/main/NavLinks.js","components/icons/Search.js","components/icons/Close.js","components/buttons/BtnResult.js","components/main/SearchBar.js","components/main/Navbar.js","components/modals/ModalSearch.js","components/buttons/BtnClose.js","components/modals/ModalMenu.js","components/main/Header.js","components/icons/Octagon.js","components/main/Error.js","components/icons/Loader.js","components/main/Loading.js","components/icons/ArrowDown.js","components/icons/ArrowUp.js","components/buttons/BtnRankSort.js","assets/binance-logo.webp","components/buttons/BtnCollection.js","components/icons/ArrowLeft.js","components/icons/ArrowRight.js","components/main/Pagination.js","components/main/TableRank.js","components/cards/CardNew.js","components/main/NewBanners.js","components/pages/Home.js","components/icons/ThumbsUp.js","components/main/Success.js","components/icons/Mail.js","components/icons/User.js","components/icons/Pen.js","components/icons/Box.js","components/icons/Image.js","components/icons/Link.js","components/icons/Twitter.js","components/icons/Discord.js","components/main/Form.js","components/pages/List.js","components/modals/ModalRich.js","components/buttons/BtnRichList.js","components/charts/ChartSankey.js","components/icons/Move.js","components/dragndrop/Row.js","components/dragndrop/Column.js","components/dragndrop/DnD.js","components/pages/Rich.js","components/buttons/BtnCrum.js","components/buttons/BtnTab.js","components/cards/CardCollection.js","components/buttons/BtnSwitchScale.js","components/charts/ChartArea.js","components/cards/CardStats.js","components/tabs/TabStats.js","components/badges/BadgeRarity.js","components/buttons/BtnItem.js","components/icons/Info.js","components/main/InfoMsg.js","components/main/TableItems.js","components/inputs/InputRadio.js","components/buttons/BtnItemsSort.js","components/inputs/InputSlider.js","components/inputs/InputCheckbox.js","components/buttons/BtnRemoveFilter.js","components/buttons/BtnRemoveAmountFilter.js","components/main/InputControl.js","components/tabs/TabItems.js","components/pages/Collection.js","components/cards/CardItem.js","components/buttons/BtnTransaction.js","components/main/TableTransactions.js","components/pages/Item.js","components/App.js","reportWebVitals.js","index.js"],"names":["getNewCollections","a","axios","get","response","data","Error","message","getSearchList","getCollectionsData","getCollectionDetails","address","getItemsData","getStatsData","getChartVolumeData","getChartSalesData","getChartOwnersData","getChartMintsData","getChartAvgData","getChartFeesData","submitProject","email","banner","icon","projectName","projectAddress","projectUrl","projectTwitter","projectDiscord","shortDesc","post","getSankeyData","getItemData","tokenId","ROUTES","id","path","label","OPTIONS_RANK_SORT_BY","name","CHART_COLORS","CHART_OPTIONS","layout","backgroundColor","textColor","fontSize","fontFamily","priceScale","borderColor","timeScale","timeVisible","secondsVisible","crosshair","vertLine","color","width","style","visible","labelVisible","horzLine","mode","grid","vertLines","horzLines","INITIAL_DND","rows","columns","rowIds","columnOrder","SANKEY_COLORS","INITIAL_ITEMS_SORT_BY","ascending","checked","column","intlNumFormat","num","locale","Intl","NumberFormat","minimumFractionDigits","format","intlNumFormatMaxDecimals","decimals","maximumFractionDigits","intlDateFormat","date","DateTimeFormat","trimAddress","slice","sortByName","b","nameA","toLowerCase","nameB","getColorFromRarity","value","DataContext","React","createContext","DataProvider","children","useState","showModalSearch","setShowModalSearch","showModalMenu","setShowModalMenu","showSuggestions","setShowSuggestions","totalPageCount","setTotalPageCount","currPage","setCurrPage","searchValue","setSearchValue","rankSortBy","setRankSortBy","searchList","setSearchList","newCollectionsData","setNewCollectionsData","rawCollectionsData","setRawCollectionsData","collectionsData","setCollectionsData","filteredSearchList","setFilteredSearchList","sortedCollectionsData","setSortedCollectionsData","loading","error","state","setState","useEffect","mounted","sorted","sort","promise1","promise2","Promise","all","response1","response2","forEach","elem","index","rank","length","start","end","updatedCollectionsData","results","filter","includes","sortedData","reverse","Provider","pageLimit","openModalSearch","closeModalSearch","openModalMenu","closeModalMenu","displayName","Cube","height","viewBox","fill","xmlns","x","y","d","clipPath","transform","Logo","className","href","target","Menu","strokeColor","stroke","strokeWidth","strokeLinecap","strokeLinejoin","BtnMenu","aria-label","onClick","BtnNav","to","NavLinks","map","route","Search","BtnResult","src","alt","SearchBar","onChange","e","type","placeholder","Navbar","ModalSearch","BtnClose","ModalMenu","Header","dataContext","useContext","showSidebar","Octagon","Loader","preserveAspectRatio","attributeName","repeatCount","dur","keyTimes","values","begin","Loading","ArrowDown","ArrowUp","BtnRankSort","currentTarget","prev","BtnCollection","items","owners","average","sales_7d","sales","volume_7d","volume","binanceLogo","ArrowLeft","ArrowRight","Pagination","containerClassName","pageClassName","activeClassName","breakClassName","previousClassName","nextClassName","disabledClassName","previousLabel","nextLabel","pageCount","Math","ceil","pageRangeDisplayed","marginPagesDisplayed","forcePage","onPageChange","Number","selected","TableRank","sales7d","volume7d","CardNew","NewBanners","Home","ThumbsUp","Success","Mail","User","Pen","Image","Link","Discord","Form","useForm","register","handleSubmit","errors","formState","onSubmit","success","autoComplete","required","maxLength","List","ModalRich","showModalRich","closeModalRich","BtnRichList","showRichOptions","openModalRich","options","valueSelected","setValueSelected","handleOnClickOption","ChartSankey","svgRef","useRef","tooltipRef","current","dndData","keys","colors","push","key","canvas","outerWidth","minWidth","innerWidth","innerHeight","chart","sankey","nodeWidth","nodePadding","extent","graph","nodes","nodeByKey","Map","indexByKey","links","k","JSON","stringify","has","node","set","i","prefix","linkByKey","names","link","source","computeGraph","Object","assign","svg","select","join","classed","attr","tooltip","chartLabels","selectAll","x0","x1","y1","y0","text","chartValues","gNodesRect","call","drag","subject","on","rectY","this","dy","yTranslate","update","gLinksPath","sankeyLinkHorizontal","xPos","layerX","yPos","layerY","newYPos","html","firstChild","removeChild","ref","Move","Row","row","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","borderLeftColor","toUpperCase","Column","droppableId","direction","droppableProps","isDraggingOver","gridTemplateColumns","DnD","dispatch","onDragEnd","result","destination","finish","startRowIds","splice","newStart","finishRowIds","newFinish","newData","payload","orderedDndData","newRowIds","newColumn","columnId","rowId","reducer","action","Rich","chartWrapperRef","setShowModalRich","setShowRichOptions","useReducer","setWidth","sankeyData","setSankeyData","attributes","setAttributes","debouncedHandleObserver","debounce","entries","newWidth","contentRect","observer","ResizeObserver","observe","unobserve","attribute","uuidv4","newDndData","BtnCrum","BtnTab","tab","setTab","CardCollection","collectionDetails","desc","twitter","url","discord","rel","BtnSwitchScale","scale","setScale","handleOnClick","ChartArea","title","canvasRef","createChart","areaSeries","addAreaSeries","applyOptions","topColor","bottomColor","lineColor","lineStyle","lineWidth","priceFormat","formatter","price","curr","currency","intlCurrNumFormat","setData","fitContent","CardStats","statsData","floor","ath","sales_24h","sales_30d","sales_all","fees_24h","fees_7d","fees_30d","fees","volume_24h","volume_30d","volume_all","currentOwners","TabStats","theme","chartVolumeData","chartSalesData","chartOwnersData","chartMintsData","chartAvgData","chartFeesData","BadgeRarity","property","rarity","BtnItem","maxAmount","created","Date","trait_type","InfoMsg","showMsg","setShowMsg","onMouseEnter","onMouseLeave","TableItems","itemsData","InputRadio","itemsSortBy","setItemsSortBy","newItemsSortBy","BtnItemsSort","showOptions","setShowOptions","InputSlider","minAmount","sliderValue","setSliderValue","ReactSlider","min","max","minDistance","step","onAfterChange","document","getElementsByClassName","blur","trackClassName","thumbActiveClassName","thumbClassName","renderThumb","props","valueNow","InputCheckbox","properties","attributesData","setAttributesData","handleOnChange","oldAttribute","find","newProperties","newAttribute","newAttributeData","count","BtnRemoveFilter","attributeId","propertyId","BtnRemoveAmountFilter","InputControl","activeFilters","TabItems","filteredItemsData","Collection","useParams","setMinAmount","setMaxAmount","setCollectionDetails","rawItemsData","setRawItemsData","setStatsData","setItemsData","setChartVolumeData","setChartSalesData","setChartOwnersData","setChartMintsData","setChartAvgData","setChartFeesData","rawAttributesData","setRawAttributesData","setFilteredItemsData","sortedItemsData","setSortedItemsData","setActiveFilters","reset","amounts","nfts","updatedAttributes","newFilters","updatedFilteredData","found","item","sortBy","slicedItemsData","updatedItemsData","console","CardItem","itemData","BtnTransaction","tx_hash","block_signed_at","from","val","fee","TableTransactions","transactions","Item","setItemData","App","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cc16d07.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getNewCollections = async () => {\r\n    try {\r\n        const response = await axios.get(`/api/newCollections`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getSearchList = async () => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionSearch`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getCollectionsData = async () => {\r\n    try {\r\n        const response = await axios.get(`/api/collections`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getCollectionDetails = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionDetails?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getItemsData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/nftList?address=${address}`);\r\n        const data = response.data;\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getStatsData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionStats?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getChartVolumeData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionVolume?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getChartSalesData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionSales?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getChartOwnersData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionOwners?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getChartMintsData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionMints?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getChartAvgData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionAvg?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getChartFeesData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/collectionFees?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const submitProject = async data => {\r\n    const {\r\n        email,\r\n        banner,\r\n        icon,\r\n        projectName,\r\n        projectAddress,\r\n        projectUrl,\r\n        projectTwitter,\r\n        projectDiscord,\r\n        shortDesc\r\n    } = data;\r\n\r\n    try {\r\n        const response = await axios.post(`/api/addCollection?email=${email}&projectName=${projectName}&shortDesc=${shortDesc}&projectAddress=${projectAddress}&icon=${icon}&banner=${banner}&projectUrl=${projectUrl}&projectTwitter=${projectTwitter}&projectDiscord=${projectDiscord}\r\n        `);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"message\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getSankeyData = async address => {\r\n    try {\r\n        const response = await axios.get(`/api/richList?address=${address}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n\r\nexport const getItemData = async (address, tokenId) => {\r\n    try {\r\n        const response = await axios.get(`/api/nft?address=${address}&id=${tokenId}`);\r\n        const data = response.data;\r\n\r\n        if(data[\"status\"]) {\r\n            return data[\"data\"];\r\n        } else {\r\n            throw Error(data[\"message\"]);\r\n        }\r\n    } catch (err) {\r\n        throw new Error(err.message);\r\n    }\r\n}\r\n","export const ROUTES = [\r\n    {\r\n        id: 0,\r\n        path: \"/\",\r\n        label: \"Collections\"\r\n    },\r\n    {\r\n        id: 1,\r\n        path: \"/rich\",\r\n        label: \"Rich list\"\r\n    },\r\n    {\r\n        id: 2,\r\n        path: \"/list\",\r\n        label: \"List project\"\r\n    },\r\n];\r\n\r\nexport const DEBOUNCE_DELAY = 100;\r\n\r\nexport const OPTIONS_RANK_SORT_BY = [\r\n    {\r\n        label: \"#\",\r\n        name: \"rank\"\r\n    },\r\n    {\r\n        label: \"Collection\",\r\n        name: \"name\"\r\n    },\r\n    {\r\n        label: \"Supply\",\r\n        name: \"items\"\r\n    },\r\n    {\r\n        label: \"Owners\",\r\n        name: \"owners\"\r\n    },\r\n    {\r\n        label: \"Sales (7d)\",\r\n        name: \"sales7d\"\r\n    },\r\n    {\r\n        label: \"Sales (all)\",\r\n        name: \"sales\"\r\n    },\r\n    {\r\n        label: \"Avg Price\",\r\n        name: \"average\"\r\n    },\r\n    {\r\n        label: \"Volume (7d)\",\r\n        name: \"volume7d\"\r\n    },\r\n    {\r\n        label: \"Volume (all)\",\r\n        name: \"volume\"\r\n    },\r\n];\r\n\r\nexport const PAGE_LIMIT = 5;\r\n\r\nexport const CHART_STATS = [\r\n    {\r\n        label: \"Items\",\r\n        name: \"items\"\r\n    },\r\n    {\r\n        label: \"Owners\",\r\n        name: \"owners\"\r\n    },\r\n    {\r\n        label: \"Avg. amount\",\r\n        name: \"avg_amount\"\r\n    },\r\n    {\r\n        label: \"Min. amount\",\r\n        name: \"min_amount\"\r\n    },\r\n    {\r\n        label: \"Max. amount\",\r\n        name: \"min_amount\"\r\n    },\r\n    {\r\n        label: \"Sales 24h\",\r\n        name: \"sales_24h\"\r\n    },\r\n    {\r\n        label: \"Sales 7d\",\r\n        name: \"sales_7d\"\r\n    },\r\n    {\r\n        label: \"Sales 30d\",\r\n        name: \"sales_30d\"\r\n    },\r\n    {\r\n        label: \"Sales\",\r\n        name: \"sales\"\r\n    },\r\n    {\r\n        label: \"Volume 24h\",\r\n        name: \"volume_24h\"\r\n    },\r\n    {\r\n        label: \"Volume 7d\",\r\n        name: \"volume_7d\"\r\n    },\r\n    {\r\n        label: \"Volume 30d\",\r\n        name: \"volume_30d\"\r\n    },\r\n    {\r\n        label: \"Volume\",\r\n        name: \"volume\"\r\n    },\r\n];\r\n\r\nexport const CHART_COLORS = [\"23, 190, 207\", \"188, 189, 34\", \"227, 119, 194\", \"127, 127, 127\", \"255, 127, 14\", \"148, 103, 189\", \"140, 86, 75\"];\r\n\r\nexport const CHART_OPTIONS = {\r\n    layout: {\r\n        backgroundColor: \"transparent\",\r\n        textColor: \"#31344b\",\r\n        fontSize: 16,\r\n        fontFamily: \"Nunito Sans\"\r\n    },\r\n    priceScale: {\r\n        borderColor: \"#44476a\"\r\n    },\r\n    timeScale: {\r\n        borderColor: \"#44476a\",\r\n        timeVisible: true,\r\n        secondsVisible: false\r\n    },\r\n    crosshair: {\r\n        vertLine: {\r\n            color: \"#44476a\",\r\n            width: 0.5,\r\n            style: 0,\r\n            visible: true,\r\n            labelVisible: true,\r\n        },\r\n        horzLine: {\r\n            color: \"#44476a\",\r\n            width: 0.5,\r\n            style: 0,\r\n            visible: true,\r\n            labelVisible: true,\r\n        },\r\n        mode: 0,\r\n    },\r\n    grid: {\r\n        vertLines: {\r\n            color: \"#44476a60\",\r\n            style: 2,\r\n            visible: true,\r\n        },\r\n        horzLines: {\r\n            color: \"#44476a60\",\r\n            style: 2,\r\n            visible: true,\r\n        }\r\n    }\r\n}\r\n\r\nexport const INITIAL_DND = {\r\n    rows: {},\r\n    columns: {\r\n        \"column-1\": {\r\n            id: \"column-1\",\r\n            rowIds: []\r\n        }\r\n    },\r\n    columnOrder: [\"column-1\"]\r\n}\r\n\r\nexport const SANKEY_COLORS = [\"#17becf\", \"#bcbd22\", \"#e377c2\", \"#7f7f7f\"];\r\n\r\nexport const SLIDER_MAX = 9999;\r\n\r\nexport const INITIAL_ITEMS_SORT_BY = [\r\n    {\r\n        id: 0,\r\n        label: \"Token ID\",\r\n        ascending: true,\r\n        checked: true,\r\n        column: \"tokenId\"\r\n    },\r\n    {\r\n        id: 1,\r\n        label: \"Lowest amount\",\r\n        ascending: true,\r\n        checked: false,\r\n        column: \"maxAmount\"\r\n    },\r\n    {\r\n        id: 2,\r\n        label: \"Highest amount\",\r\n        ascending: false,\r\n        checked: false,\r\n        column: \"maxAmount\"\r\n    },\r\n    {\r\n        id: 3,\r\n        label: \"Recently minted\",\r\n        ascending: false,\r\n        checked: false,\r\n        column: \"created\"\r\n    },\r\n];\r\n","export const getCurPath = () => {\r\n    const str = window.location.pathname;\r\n    return str[str.length - 1] === \"/\" ? str.substring(-1) : str;\r\n}\r\n\r\nexport const intlNumFormat = function (num, locale = \"en-US\") {\r\n    return new Intl.NumberFormat(locale, {\r\n        style: \"decimal\",\r\n        minimumFractionDigits: 0\r\n    }).format(num);\r\n}\r\n\r\nexport const intlNumFormatMaxDecimals = function (num, decimals = 2, locale = \"en-US\") {\r\n    return new Intl.NumberFormat(locale, {\r\n        style: \"decimal\",\r\n        maximumFractionDigits: decimals\r\n    }).format(num);\r\n}\r\n\r\nexport const intlCurrNumFormat = function (num, curr, locale = \"en-US\") {\r\n    return new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: curr,\r\n        minimumFractionDigits: 0\r\n    }).format(num);\r\n}\r\n\r\nexport const intlDateFormat = function (date, locale = \"en-US\") {\r\n    return new Intl.DateTimeFormat(locale).format(date);\r\n}\r\n\r\nexport const trimAddress = address => {\r\n    if(!address) return \"\";\r\n    return `${address.slice(0, 4)}...${address.slice(-4)}`;\r\n}\r\n\r\nexport const sortByName = (a, b, name) => {\r\n    const nameA = a[name].toLowerCase();\r\n    const nameB = b[name].toLowerCase();\r\n\r\n    if (nameA < nameB) {\r\n      return -1;\r\n    }\r\n    if (nameA > nameB) {\r\n      return 1;\r\n    }\r\n    return 0;        \r\n}\r\n\r\nexport const getColorFromRarity = value => {\r\n    if(value <= 0.01) return \"yellow\";\r\n    if(value <= 0.1) return \"blue\";\r\n    if(value <= 1) return \"pink\";\r\n    return \"gray\";\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getSearchList, getNewCollections, getCollectionsData } from \"../api\";\r\nimport { PAGE_LIMIT } from \"../helpers/constants\";\r\nimport { sortByName } from \"../helpers/functions\";\r\n\r\nexport const DataContext = React.createContext();\r\nDataContext.displayName = \"DataProvider\";\r\n\r\nexport default function DataProvider({ children }) {\r\n    // ~~~ Modals ~~~\r\n    const [showModalSearch, setShowModalSearch] = useState(false);\r\n    const [showModalMenu, setShowModalMenu] = useState(false);\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    // ~~~ Params for calling  APIs ~~~\r\n    const [totalPageCount, setTotalPageCount] = useState(0);\r\n    const [currPage, setCurrPage] = useState(1);\r\n    // ~~~ Params for sorting and filtering ~~~\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [rankSortBy, setRankSortBy] = useState({\r\n        column: \"volume\",\r\n        ascending: false\r\n    });\r\n    // ~~~ Data ~~~\r\n    const [searchList, setSearchList] = useState([]);\r\n    const [newCollectionsData, setNewCollectionsData] = useState([]);\r\n    const [rawCollectionsData, setRawCollectionsData] = useState([]);\r\n    const [collectionsData, setCollectionsData] = useState([]);\r\n    // ~~~ Data manipulation ~~~\r\n    const [filteredSearchList, setFilteredSearchList] = useState([]);\r\n    const [sortedCollectionsData, setSortedCollectionsData] = useState([]);\r\n    // ~~~ Keeping tabs on loading and error ~~~\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        error: \"\"\r\n    });\r\n\r\n    // ~~~ API calls ~~~\r\n    // ~~~ Fetching data for Search Bar ~~~\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getSearchList();\r\n                    const sorted = response.sort((a, b) => sortByName(a, b, \"name\"));\r\n                    setSearchList(sorted);\r\n                } catch (err) {\r\n                    // Leave empty so it won't display\r\n                    return;\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, []);\r\n\r\n    // ~~~ Fetching data for Rank Table and New collections banners ~~~\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const promise1 = getCollectionsData();\r\n                    const promise2 = getNewCollections();\r\n                   \r\n                    const [response1, response2] = await Promise.all([promise1, promise2])\r\n\r\n                    response1.forEach((elem, index) => {\r\n                        elem.rank = index + 1;\r\n                    });\r\n                    setRawCollectionsData(response1);\r\n                    setTotalPageCount(response1.length);\r\n                    setNewCollectionsData(response2);\r\n                    setState({\r\n                        loading: false,\r\n                        error: \"\"\r\n                    });\r\n                } catch (err) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: err.message\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, []);\r\n\r\n    // ~~~ Update items data on pagination change ~~~\r\n    useEffect(() => {\r\n        const start = (currPage - 1) * PAGE_LIMIT;\r\n        const end = start + PAGE_LIMIT;\r\n        const updatedCollectionsData = [...rawCollectionsData].slice(start, end);\r\n        setCollectionsData(updatedCollectionsData);\r\n    }, [rawCollectionsData, currPage]);\r\n\r\n    // ~~~  Filtering ~~~\r\n    useEffect(() => {\r\n        // Filter Search list for Search Bar\r\n        if(searchList?.length === 0) return;\r\n\r\n        const results = [...searchList]\r\n            .filter(elem => elem.name.toLowerCase()\r\n            .includes(searchValue.toLowerCase()));\r\n\r\n        results.sort((a, b) => sortByName(a, b, \"name\"));\r\n\r\n        setFilteredSearchList(results);\r\n    }, [searchValue, searchList]);\r\n\r\n    // ~~~ Sorting ~~~\r\n    useEffect(() => {\r\n        // Sort data displayed in Rank Table\r\n        if(collectionsData?.length === 0) return;\r\n\r\n        const sortedData = [...collectionsData];\r\n        const column = rankSortBy.column;\r\n\r\n        // Check if it is a number of string\r\n        if(typeof collectionsData[0][column] === \"number\") {\r\n            sortedData.sort((a, b) => {\r\n                if(rankSortBy.ascending) {\r\n                    return a[column] - b[column];\r\n                } else {\r\n                    return b[column] - a[column];\r\n                }\r\n            });\r\n        } else {\r\n            sortedData.sort((a, b) => sortByName(a, b, column));\r\n\r\n            if(rankSortBy.ascending) {\r\n                sortedData.reverse();\r\n            }\r\n        }\r\n\r\n        setSortedCollectionsData(sortedData);\r\n    }, [rankSortBy, collectionsData]);\r\n\r\n    // ~~~ Modal search controlls ~~~ \r\n    useEffect(() => {\r\n        // Criteria to open/close modal-search for Search Bar\r\n        if(searchValue || showSuggestions) {\r\n            setShowModalSearch(true);\r\n        } else {\r\n            setShowModalSearch(false);\r\n        }\r\n    }, [searchValue, showSuggestions]);\r\n\r\n    const closeModalSearch = () => {\r\n        setShowSuggestions(false);\r\n        setSearchValue(\"\");\r\n    }\r\n\r\n    const openModalSearch = () => {\r\n        setShowSuggestions(true);\r\n    }\r\n\r\n    const closeModalMenu = () => {\r\n        setShowModalMenu(false);\r\n    }\r\n\r\n    const openModalMenu = () => {\r\n        setShowModalMenu(true);\r\n    }\r\n\r\n    return (\r\n        <DataContext.Provider\r\n            value={{\r\n                state: state,\r\n                showSuggestions: showSuggestions,\r\n                showModalSearch: showModalSearch,\r\n                showModalMenu: showModalMenu,\r\n                searchValue: searchValue,\r\n                rankSortBy: rankSortBy,\r\n                totalPageCount: totalPageCount,\r\n                currPage: currPage,\r\n                pageLimit: PAGE_LIMIT,\r\n                newCollectionsData: newCollectionsData,\r\n                searchList: searchList,\r\n                filteredSearchList: filteredSearchList,\r\n                sortedCollectionsData: sortedCollectionsData,\r\n                setSearchValue: setSearchValue,\r\n                setRankSortBy: setRankSortBy,\r\n                setCurrPage: setCurrPage,\r\n                openModalSearch: openModalSearch,\r\n                closeModalSearch: closeModalSearch,\r\n                openModalMenu: openModalMenu,\r\n                closeModalMenu: closeModalMenu\r\n            }}\r\n        >\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n}\r\n","export default function Cube() {\r\n    return (\r\n    <svg width=\"512\" height=\"512\" viewBox=\"0 0 512 512\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <rect width=\"236\" height=\"236\" fill=\"#17BECF\"/>\r\n        <rect width=\"236\" height=\"236\" fill=\"#17BECF\"/>\r\n        <rect width=\"236\" height=\"236\" fill=\"#17BECF\"/>\r\n        <rect width=\"236\" height=\"236\" fill=\"#17BECF\"/>\r\n        <rect x=\"276\" y=\"276\" width=\"236\" height=\"236\" fill=\"#E377C2\"/>\r\n        <rect x=\"276\" y=\"276\" width=\"236\" height=\"236\" fill=\"#E377C2\"/>\r\n        <rect x=\"276\" y=\"276\" width=\"236\" height=\"236\" fill=\"#E377C2\"/>\r\n        <rect x=\"276\" y=\"276\" width=\"236\" height=\"236\" fill=\"#E377C2\"/>\r\n        <rect y=\"276\" width=\"236\" height=\"236\" fill=\"#7F7F7F\"/>\r\n        <rect y=\"276\" width=\"236\" height=\"236\" fill=\"#7F7F7F\"/>\r\n        <rect y=\"276\" width=\"236\" height=\"236\" fill=\"#7F7F7F\"/>\r\n        <rect y=\"276\" width=\"236\" height=\"236\" fill=\"#7F7F7F\"/>\r\n        <rect x=\"276\" width=\"236\" height=\"236\" fill=\"#BCBD22\"/>\r\n        <rect x=\"276\" width=\"236\" height=\"236\" fill=\"#BCBD22\"/>\r\n        <rect x=\"276\" width=\"236\" height=\"236\" fill=\"#BCBD22\"/>\r\n        <rect x=\"276\" width=\"236\" height=\"236\" fill=\"#BCBD22\"/>\r\n        <path d=\"M129.209 91.5969C115.211 84.7703 98.7953 88.8078 89.3125 100.309L103.975 114.972C105.648 116.645 105.648 119.328 103.975 120.975C103.152 121.798 102.062 122.223 100.973 122.223C99.8844 122.223 98.7953 121.798 97.9719 120.975L84.6375 107.641L50.6109 177.42C49.8406 179.014 49.7875 180.953 50.6109 182.653C52.0453 185.602 55.6312 186.823 58.5797 185.389L94.0672 168.07L80.9984 155.002C79.325 153.355 79.325 150.645 80.9984 148.998C82.6719 147.352 85.3547 147.352 87.0016 148.998L102.142 164.139L129.236 150.911C135.611 147.803 141.056 142.597 144.403 135.744C152.398 119.355 145.598 99.5922 129.209 91.5969V91.5969ZM153.673 82.3266C158.853 71.5156 156.17 58.7391 145.625 50C132.264 61.0766 131.68 78.5547 143.527 90.3484L145.652 92.4734C157.445 104.32 174.95 103.736 186 90.375C177.261 79.8297 164.484 77.1469 153.673 82.3266V82.3266Z\" fill=\"#31344B\"/>\r\n        <g clipPath=\"url(#clip0_33:19)\">\r\n            <path d=\"M448.798 342.628C434.242 330.223 412.594 332.455 399.233 346.241L394 351.633L388.767 346.241C375.433 332.455 353.758 330.223 339.202 342.628C322.52 356.866 321.644 382.419 336.572 397.852L387.97 450.923C391.291 454.35 396.683 454.35 400.003 450.923L451.402 397.852C466.356 382.419 465.48 356.866 448.798 342.628V342.628Z\" fill=\"#31344B\"/>\r\n        </g>\r\n        <g clipPath=\"url(#clip1_33:19)\">\r\n            <path d=\"M440.632 57.5555L462 95.3333H438.129L421.79 57.5555H440.632ZM410.41 57.5555L426.749 95.3333H361.251L377.59 57.5555H410.41ZM347.368 57.5555H366.21L349.871 95.3333H326L347.368 57.5555ZM326 102.889H349.776L378.818 162.318C379.172 163.05 378.181 163.711 377.637 163.097L326 102.889ZM360.992 102.889H427.008L394.661 178.019C394.425 178.586 393.599 178.586 393.362 178.019L360.992 102.889ZM409.182 162.318L438.224 102.889H462L410.362 163.074C409.819 163.711 408.828 163.05 409.182 162.318V162.318Z\" fill=\"#31344B\"/>\r\n        </g>\r\n        <path d=\"M138.4 411H148.6C150.3 411 152 409.3 152 407.6V371.9C152 370.2 150.3 368.5 148.6 368.5H138.4C136.7 368.5 135 370.2 135 371.9V407.6C135 409.3 136.7 411 138.4 411V411ZM163.9 411H174.1C175.8 411 177.5 409.3 177.5 407.6V346.4C177.5 344.7 175.8 343 174.1 343H163.9C162.2 343 160.5 344.7 160.5 346.4V407.6C160.5 409.3 162.2 411 163.9 411ZM87.4 411H97.6C99.3 411 101 409.3 101 407.6V388.9C101 387.2 99.3 385.5 97.6 385.5H87.4C85.7 385.5 84 387.2 84 388.9V407.6C84 409.3 85.7 411 87.4 411ZM112.9 411H123.1C124.8 411 126.5 409.3 126.5 407.6V354.9C126.5 353.2 124.8 351.5 123.1 351.5H112.9C111.2 351.5 109.5 353.2 109.5 354.9V407.6C109.5 409.3 111.2 411 112.9 411V411ZM181.75 428H67V347.25C67 344.902 65.0981 343 62.75 343H54.25C51.9019 343 50 344.902 50 347.25V436.5C50 441.194 53.8064 445 58.5 445H181.75C184.098 445 186 443.098 186 440.75V432.25C186 429.902 184.098 428 181.75 428Z\" fill=\"#31344B\"/>\r\n        <defs>\r\n            <clipPath id=\"clip0_33:19\">\r\n                <rect width=\"136\" height=\"136\" fill=\"white\" transform=\"translate(326 326)\"/>\r\n            </clipPath>\r\n            <clipPath id=\"clip1_33:19\">\r\n            <   rect width=\"136\" height=\"136\" fill=\"white\" transform=\"translate(326 50)\"/>\r\n            </clipPath>\r\n        </defs>\r\n    </svg>\r\n    );\r\n}\r\n","import \"./Logo.css\";\r\nimport Cube from \"../icons/Cube\";\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <a\r\n            className=\"logo\"\r\n            href=\"/\"\r\n            target=\"_self\"\r\n        >\r\n            <Cube />\r\n            <div>\r\n                <div>NFT</div>\r\n                <div>BSC</div>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n","export default function Menu() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M3 12H21\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M3 6H21\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M3 18H21\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./BtnMenu.css\";\r\nimport Menu from \"../icons/Menu\";\r\n\r\nexport default function BtnMenu({ openModalMenu }) {\r\n    return (\r\n        <div className=\"btn-menu\">\r\n            <button \r\n                className=\"btn-menu__icon\"\r\n                name=\"menu\"\r\n                aria-label=\"menu\"\r\n                onClick={openModalMenu}\r\n            >\r\n                <Menu />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BtnNav.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function BtnNav({ path, label, closeModalMenu }) {\r\n    return (\r\n        <Link\r\n            to={path}\r\n            className=\"btn-nav\"\r\n            onClick={closeModalMenu}\r\n        >\r\n            {label}\r\n        </Link>\r\n    );\r\n}\r\n","import \"./NavLinks.css\";\r\nimport { ROUTES } from \"../../helpers/constants\";\r\nimport BtnNav from \"../buttons/BtnNav\";\r\n\r\nexport default function NavLinks({ className, closeModalMenu }) {\r\n    return (\r\n        <div className={`links ${className}`}>\r\n            {\r\n                ROUTES.map(route => (\r\n                    <BtnNav\r\n                        key={route.id}\r\n                        path={route.path}\r\n                        label={route.label}\r\n                        closeModalMenu={closeModalMenu}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","export default function Search() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M11 19.5C15.4183 19.5 19 15.9183 19 11.5C19 7.08172 15.4183 3.5 11 3.5C6.58172 3.5 3 7.08172 3 11.5C3 15.9183 6.58172 19.5 11 19.5Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M21 21.5L16.65 17.15\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Search() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M18 6.5L6 18.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M6 6.5L18 18.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./BtnResult.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function BtnResult({\r\n    icon,\r\n    name,\r\n    address,\r\n    closeModalSearch\r\n}) {\r\n    return (\r\n        <Link\r\n            to={`/collection/${address}`}\r\n            className=\"btn-result\"\r\n            onClick={closeModalSearch}\r\n        >\r\n            <img\r\n                src={icon}\r\n                alt={name}\r\n            ></img>\r\n            <div>{name}</div>\r\n        </Link>\r\n    );\r\n}\r\n","import \"./SearchBar.css\";\r\nimport Search from \"../icons/Search\";\r\nimport Close from \"../icons/Close\";\r\nimport BtnResult from \"../buttons/BtnResult\";\r\n\r\nexport default function SearchBar({ \r\n    filteredSearchList,\r\n    searchValue,\r\n    setSearchValue,\r\n    showSuggestions,\r\n    closeModalSearch,\r\n    openModalSearch\r\n}) {\r\n\r\n    return (\r\n        <div className={`search-bar ${showSuggestions ? \"active\" : \"\"}`}>\r\n            <input\r\n                className=\"search-bar__input\"\r\n                onChange={e => setSearchValue(e.target.value)}\r\n                onClick={() => openModalSearch()}\r\n                value={searchValue}\r\n                type=\"text\"\r\n                placeholder=\"Search collection\"\r\n            ></input>\r\n            {\r\n                showSuggestions &&\r\n                <button \r\n                    className=\"center search-bar__input__icon\" \r\n                    onClick={closeModalSearch}\r\n                    aria-label=\"close\"\r\n                >\r\n                    <Close />\r\n                </button>\r\n            }\r\n            {\r\n                !showSuggestions &&\r\n                <button \r\n                    className=\"center search-bar__input__icon\"\r\n                    onClick={openModalSearch}\r\n                    aria-label=\"search\"\r\n                >\r\n                    <Search />\r\n                </button>\r\n            }\r\n            {\r\n                showSuggestions && filteredSearchList?.length > 0 &&\r\n                <>\r\n                    <div className=\"search-bar__options\">\r\n                        {\r\n                            filteredSearchList.map((elem, index) => (\r\n                                <BtnResult\r\n                                    key={index}\r\n                                    icon={elem.icon}\r\n                                    name={elem.name}\r\n                                    address={elem.address}\r\n                                    closeModalSearch={closeModalSearch}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import \"./Navbar.css\";\r\nimport Logo from \"./Logo\";\r\nimport BtnMenu from \"../buttons/BtnMenu\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nexport default function Navbar({ \r\n    filteredSearchList,\r\n    searchValue,\r\n    setSearchValue,\r\n    showSuggestions,\r\n    closeModalSearch,\r\n    openModalSearch,\r\n    closeModalMenu,\r\n    openModalMenu\r\n}) {\r\n    return (\r\n        <nav className=\"navbar global-width\">\r\n            <Logo />\r\n            <NavLinks\r\n                className=\"navbar__links\"\r\n                closeModalMenu={closeModalMenu}\r\n            />\r\n            <div className=\"center\">\r\n                <SearchBar\r\n                    filteredSearchList={filteredSearchList}\r\n                    searchValue={searchValue}\r\n                    setSearchValue={setSearchValue}\r\n                    showSuggestions={showSuggestions}\r\n                    closeModalSearch={closeModalSearch}\r\n                    openModalSearch={openModalSearch}\r\n                />\r\n                <BtnMenu\r\n                    openModalMenu={openModalMenu}\r\n                />\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import \"./ModalSearch.css\";\r\n\r\nexport default function ModalSearch({\r\n    showModalSearch,\r\n    closeModalSearch\r\n}) {\r\n    return (\r\n        <>\r\n            {\r\n                showModalSearch &&\r\n                <div\r\n                    className=\"modal-search\"\r\n                    onClick={() => closeModalSearch()}\r\n                ></div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import \"./BtnClose.css\";\r\nimport Close from \"../icons/Close\";\r\n\r\nexport default function BtnClose({ closeModalMenu }) {\r\n    return (\r\n        <div className=\"btn-close\">\r\n            <button \r\n                className=\"center btn-close__icon\"\r\n                name=\"close\"\r\n                aria-label=\"close\"\r\n                onClick={closeModalMenu}\r\n            >\r\n                <Close />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import \"./ModalMenu.css\";\r\nimport Logo from \"../main/Logo\";\r\nimport BtnClose from \"../buttons/BtnClose\";\r\nimport NavLinks from \"../main/NavLinks\";\r\n\r\nexport default function ModalMenu({\r\n    showModalMenu,\r\n    closeModalMenu\r\n}) {\r\n\r\n    const handleOnClick = e => {\r\n        if(e.target.className === \"modal__menu__wrapper\") {\r\n            closeModalMenu();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                showModalMenu &&\r\n                <div\r\n                    className=\"modal__menu__wrapper\"\r\n                    onClick={handleOnClick}\r\n                >\r\n                    <div className=\"modal__menu\">\r\n                        <div className=\"modal__menu__top\">\r\n                            <Logo />\r\n                            <BtnClose \r\n                                closeModalMenu={closeModalMenu}\r\n                            />\r\n                        </div>\r\n                        <NavLinks\r\n                            className=\"modal__menu__links\"\r\n                            closeModalMenu={closeModalMenu}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import \"./Header.css\";\r\nimport { useContext } from \"react\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\nimport Navbar from \"../main/Navbar\";\r\nimport ModalSearch from \"../modals/ModalSearch\";\r\nimport ModalMenu from \"../modals/ModalMenu\";\r\n\r\nexport default function Header() {\r\n    const dataContext = useContext(DataContext);\r\n\r\n    return (\r\n        <header>\r\n            <Navbar\r\n                filteredSearchList={dataContext.filteredSearchList}\r\n                searchValue={dataContext.searchValue}\r\n                showSuggestions={dataContext.showSuggestions}\r\n                closeModalSearch={dataContext.closeModalSearch}\r\n                openModalSearch={dataContext.openModalSearch}\r\n                setSearchValue={dataContext.setSearchValue}\r\n                openModalMenu={dataContext.openModalMenu}\r\n            />\r\n            <ModalSearch\r\n                showModalSearch={dataContext.showModalSearch}\r\n                closeModalSearch={dataContext.closeModalSearch}\r\n                showSidebar={dataContext.showSidebar}\r\n            />\r\n            <ModalMenu\r\n                showModalMenu={dataContext.showModalMenu}\r\n                closeModalMenu={dataContext.closeModalMenu}\r\n            />\r\n        </header>\r\n    );\r\n}\r\n","export default function Octagon() {\r\n    const strokeColor = \"var(--red)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M8.61505 2.96977H16.8951L22.7551 8.82977V17.1098L16.8951 22.9698H8.61505L2.75505 17.1098V8.82977L8.61505 2.96977Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M15.7551 9.96977L9.75505 15.9698\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M9.75505 9.96977L15.7551 15.9698\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./Error.css\";\r\nimport Octagon from \"../icons/Octagon\";\r\n\r\nexport default function Error({ message }) {\r\n    return (\r\n        <div className=\"error\">\r\n            <div>\r\n                <Octagon />\r\n                <span>Error!</span>\r\n            </div>\r\n            <div>{message}</div>\r\n        </div>\r\n    );\r\n}\r\n","export default function Loader() {\r\n    return (\r\n        <svg className=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(26.666666666666668,26.666666666666668)\">\r\n                <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"#17becf\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"1.1500000000000001;1\" begin=\"-0.3s\"></animateTransform>\r\n                </rect>\r\n            </g>\r\n            <g transform=\"translate(73.33333333333333,26.666666666666668)\">\r\n                <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"#bcbd22\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"1.1500000000000001;1\" begin=\"-0.2s\"></animateTransform>\r\n                </rect>\r\n            </g>\r\n            <g transform=\"translate(26.666666666666668,73.33333333333333)\">\r\n                <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"#7f7f7f\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"1.1500000000000001;1\" begin=\"0s\"></animateTransform>\r\n                </rect>\r\n            </g>\r\n            <g transform=\"translate(73.33333333333333,73.33333333333333)\">\r\n                <rect x=\"-20\" y=\"-20\" width=\"40\" height=\"40\" fill=\"#e377c2\">\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"1.1500000000000001;1\" begin=\"-0.1s\"></animateTransform>\r\n                </rect>\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n","import \"./Loading.css\";\r\nimport Loader from \"../icons/Loader\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <Loader />\r\n        </div>\r\n    );\r\n}\r\n","export default function ArrowDown() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 25\">\r\n            <path\r\n                d=\"M6 9.5L12 15.5L18 9.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function ArrowUp() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M18 15L12 9L6 15\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./BtnRankSort.css\";\r\nimport ArrowDown from \"../icons/ArrowDown\";\r\nimport ArrowUp from \"../icons/ArrowUp\";\r\n\r\nexport default function BtnRankSort({\r\n    name,\r\n    label,\r\n    rankSortBy,\r\n    setRankSortBy\r\n}) {\r\n\r\n    const handleOnClick = e => {\r\n        const name = e.currentTarget.name;\r\n        setRankSortBy(prev => {\r\n            return {\r\n                column: name,\r\n                ascending: !prev.ascending\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn-rank-sort\"\r\n            name={name}\r\n            aria-label={name}\r\n            onClick={handleOnClick}\r\n        >\r\n            {label}\r\n            {\r\n                rankSortBy.column === name &&\r\n                !rankSortBy.ascending &&\r\n                <ArrowUp />\r\n            }\r\n            {\r\n                rankSortBy.column === name &&\r\n                rankSortBy.ascending &&\r\n                <ArrowDown />\r\n            }\r\n        </button>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/binance-logo.72e24e3c.webp\";","import \"./BtnCollection.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { intlNumFormatMaxDecimals } from \"../../helpers/functions\";\r\nimport binanceLogo from \"../../assets/binance-logo.webp\";\r\n\r\nexport default function BtnCollection({\r\n    rank,\r\n    icon,\r\n    name,\r\n    address,\r\n    items,\r\n    owners,\r\n    average,\r\n    sales_7d,\r\n    sales,\r\n    volume_7d,\r\n    volume,\r\n}) {\r\n    return (\r\n        <Link\r\n            to={`/collection/${address}`}\r\n            className=\"btn-collection grid--rank\"\r\n        >\r\n            <div className=\"btn-collection__rank\">{rank}</div>\r\n            <div className=\"btn-collection__name\">\r\n                <img\r\n                    className=\"btn-collection__name__icon\"\r\n                    src={icon}\r\n                    alt={name}\r\n                ></img>\r\n                <div>{name}</div>\r\n            </div>\r\n            <div className=\"btn-collection__items\">{intlNumFormatMaxDecimals(items)}</div>\r\n            <div className=\"btn-collection__owners\">{intlNumFormatMaxDecimals(owners)}</div>\r\n            <div className=\"btn-collection__sales_7d\">{intlNumFormatMaxDecimals(sales_7d)}</div>\r\n            <div className=\"btn-collection__sales\">{intlNumFormatMaxDecimals(sales)}</div>\r\n            <div className=\"btn-collection__average\">\r\n                <img\r\n                    className=\"binance-logo\"\r\n                    src={binanceLogo}\r\n                    alt=\"currency\"\r\n                ></img>\r\n                <div>{intlNumFormatMaxDecimals(average)}</div>\r\n            </div>\r\n            <div className=\"btn-collection__volume_7d\">             \r\n                <img\r\n                    className=\"binance-logo\"\r\n                    src={binanceLogo}\r\n                    alt=\"currency\"\r\n                ></img>\r\n                <div>{intlNumFormatMaxDecimals(volume_7d)}</div>\r\n            </div>\r\n            <div className=\"btn-collection__volume\">             \r\n                <img\r\n                    className=\"binance-logo\"\r\n                    src={binanceLogo}\r\n                    alt=\"currency\"\r\n                ></img>\r\n                <div>{intlNumFormatMaxDecimals(volume)}</div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n","export default function ArrowLeft() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M15 18L9 12L15 6\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function ArrowRight() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M9 18L15 12L9 6\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./Pagination.css\";\r\nimport ArrowLeft from \"../icons/ArrowLeft\";\r\nimport ArrowRight from \"../icons/ArrowRight\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport default function Pagination({\r\n    totalPageCount,\r\n    pageLimit,\r\n    currPage,\r\n    setCurrPage\r\n}) {\r\n    return (\r\n        <ReactPaginate\r\n            containerClassName=\"pagination center\"\r\n            pageClassName=\"page\"\r\n            activeClassName=\"page page-current\"\r\n            breakClassName=\"page page-ellipsis\"\r\n            previousClassName=\"page page-previous\"\r\n            nextClassName=\"page page-next\"\r\n            disabledClassName=\"page page-disabled\"\r\n            previousLabel={<ArrowLeft />}\r\n            nextLabel={<ArrowRight />}\r\n            pageCount={Math.ceil(totalPageCount / pageLimit)}\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={1}\r\n            forcePage={currPage - 1}\r\n            onPageChange={e => setCurrPage(Number(e.selected + 1))}\r\n        />\r\n    );\r\n}\r\n","import \"./TableRank.css\";\r\nimport { OPTIONS_RANK_SORT_BY } from \"../../helpers/constants\";\r\nimport BtnRankSort from \"../buttons/BtnRankSort\";\r\nimport BtnCollection from \"../buttons/BtnCollection\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nexport default function TableRank({\r\n    sortedCollectionsData,\r\n    rankSortBy,\r\n    setRankSortBy,\r\n    totalPageCount,\r\n    pageLimit,\r\n    currPage,\r\n    setCurrPage\r\n}) {\r\n    return (\r\n        <div className=\"table global-width\">\r\n            <div className=\"table-list table-list--rank\">\r\n                <div className=\"table-list__header grid--rank\">\r\n                    {\r\n                        OPTIONS_RANK_SORT_BY.map((elem, index) => (\r\n                            <BtnRankSort\r\n                                key={index}\r\n                                name={elem.name}\r\n                                label={elem.label}\r\n                                rankSortBy={rankSortBy}\r\n                                setRankSortBy={setRankSortBy}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"table-list__body\">\r\n                    {\r\n                        sortedCollectionsData?.length > 0 &&\r\n                        sortedCollectionsData.map((elem, index) => (\r\n                            <BtnCollection\r\n                                key={index}\r\n                                rank={elem.rank}\r\n                                icon={elem.icon}\r\n                                name={elem.name}\r\n                                address={elem.address}\r\n                                items={elem.items}\r\n                                owners={elem.owners}\r\n                                average={elem.average}\r\n                                sales_7d={elem.sales7d}\r\n                                sales={elem.sales}\r\n                                volume_7d={elem.volume7d}\r\n                                volume={elem.volume}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Pagination\r\n                    totalPageCount={totalPageCount}\r\n                    pageLimit={pageLimit}\r\n                    currPage={currPage}\r\n                    setCurrPage={setCurrPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./CardNew.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { intlNumFormat } from \"../../helpers/functions\";\r\n\r\nexport default function CardNew({\r\n    name,\r\n    address,\r\n    icon,\r\n    banner,\r\n    items\r\n}) {\r\n    return (\r\n        <Link\r\n            to={`/collection/${address}`}\r\n            className=\"card-new\"\r\n        >\r\n            <div className=\"card-new__banner\">\r\n                <img\r\n                    src={banner}\r\n                    alt={name}\r\n                ></img>\r\n            </div>\r\n            <div className=\"card-new__details\">\r\n                <div className=\"card-new__details__name\">{name}</div>\r\n                <div className=\"card-new__details__items\">{intlNumFormat(items)} items</div>\r\n            </div>\r\n            <div className=\"card-new__image\">\r\n                <img\r\n                    src={icon}\r\n                    alt={name}\r\n                ></img>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n","import \"./NewBanners.css\";\r\nimport CardNew from \"../cards/CardNew\";\r\n\r\nexport default function NewBanners({ newCollectionsData }) {\r\n    return (\r\n        <div className=\"new-banners\">\r\n            {\r\n                newCollectionsData?.length > 0 &&\r\n                <>\r\n                    <h1>New collections</h1>\r\n                    <div className=\"new-banners__collections grid--new\">\r\n                        {\r\n                            newCollectionsData.map((elem, index) => (\r\n                                <CardNew\r\n                                    key={index}\r\n                                    name={elem.name}\r\n                                    address={elem.address}\r\n                                    icon={elem.icon}\r\n                                    banner={elem.banner}\r\n                                    items={elem.items}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\nimport Error from \"../main/Error\";\r\nimport Loading from \"../main/Loading\";\r\nimport TableRank from \"../main/TableRank\";\r\nimport NewBanners from \"../main/NewBanners\";\r\n\r\nexport default function Home() {\r\n    const dataContext = useContext(DataContext);\r\n\r\n    if(dataContext.state.error) return (\r\n        <section>\r\n            <div className=\"wrapper global-width\">\r\n                <Error message={dataContext.state.error} />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    if(dataContext.state.loading) return (\r\n        <section>\r\n            <div className=\"wrapper global-width\">\r\n                <Loading />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"wrapper global-width\">\r\n                <NewBanners\r\n                    newCollectionsData={dataContext.newCollectionsData}\r\n                />\r\n            {\r\n                dataContext.sortedCollectionsData?.length > 0 &&\r\n                <h1>Collections by Volume</h1>\r\n            } \r\n            </div>\r\n            {\r\n                dataContext.sortedCollectionsData?.length > 0 &&\r\n                <TableRank\r\n                    sortedCollectionsData={dataContext.sortedCollectionsData}\r\n                    rankSortBy={dataContext.rankSortBy}\r\n                    setRankSortBy={dataContext.setRankSortBy}\r\n                    totalPageCount={dataContext.totalPageCount}\r\n                    pageLimit={dataContext.pageLimit}\r\n                    currPage={dataContext.currPage}\r\n                    setCurrPage={dataContext.setCurrPage}\r\n                />\r\n            }\r\n        </section>\r\n    );\r\n}\r\n","export default function ThumbsUp() {\r\n    const strokeColor = \"var(--green)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M7.75505 22.8322H4.75505C4.22462 22.8322 3.71591 22.6215 3.34084 22.2464C2.96576 21.8713 2.75505 21.3626 2.75505 20.8322V13.8322C2.75505 13.3018 2.96576 12.793 3.34084 12.418C3.71591 12.0429 4.22462 11.8322 4.75505 11.8322H7.75505M14.7551 9.83218V5.83218C14.7551 5.03653 14.439 4.27347 13.8764 3.71086C13.3138 3.14825 12.5507 2.83218 11.7551 2.83218L7.75505 11.8322V22.8322H19.0351C19.5174 22.8376 19.9854 22.6686 20.353 22.3562C20.7205 22.0438 20.9627 21.6091 21.0351 21.1322L22.4151 12.1322C22.4586 11.8455 22.4392 11.5529 22.3584 11.2744C22.2776 10.996 22.1372 10.7385 21.9469 10.5197C21.7567 10.3009 21.5211 10.1261 21.2566 10.0074C20.9921 9.88869 20.705 9.8289 20.4151 9.83218H14.7551Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./Success.css\";\r\nimport ThumbsUp from \"../icons/ThumbsUp\";\r\n\r\nexport default function Success({ message }) {\r\n    return (\r\n        <div className=\"success\">\r\n            <div>\r\n                <ThumbsUp />\r\n                <span>Success!</span>\r\n            </div>\r\n            <div>{message}</div>\r\n        </div>\r\n    );\r\n}\r\n","export default function Mail() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M4.03818 4.83218H20.0382C21.1382 4.83218 22.0382 5.73218 22.0382 6.83218V18.8322C22.0382 19.9322 21.1382 20.8322 20.0382 20.8322H4.03818C2.93818 20.8322 2.03818 19.9322 2.03818 18.8322V6.83218C2.03818 5.73218 2.93818 4.83218 4.03818 4.83218Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M22.0382 6.83218L12.0382 13.8322L2.03818 6.83218\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function User() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M20.0382 21.9698V19.9698C20.0382 18.9089 19.6167 17.8915 18.8666 17.1413C18.1165 16.3912 17.099 15.9698 16.0382 15.9698H8.03818C6.97731 15.9698 5.9599 16.3912 5.20975 17.1413C4.4596 17.8915 4.03818 18.9089 4.03818 19.9698V21.9698\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M12.0382 11.9698C14.2473 11.9698 16.0382 10.1789 16.0382 7.96977C16.0382 5.76063 14.2473 3.96977 12.0382 3.96977C9.82904 3.96977 8.03818 5.76063 8.03818 7.96977C8.03818 10.1789 9.82904 11.9698 12.0382 11.9698Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Pen() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M17.0382 3.83218C17.3008 3.56954 17.6126 3.3612 17.9558 3.21905C18.2989 3.07691 18.6667 3.00375 19.0382 3.00375C19.4096 3.00375 19.7774 3.07691 20.1206 3.21905C20.4637 3.3612 20.7755 3.56954 21.0382 3.83218C21.3008 4.09482 21.5092 4.40663 21.6513 4.74979C21.7934 5.09295 21.8666 5.46075 21.8666 5.83218C21.8666 6.20362 21.7934 6.57141 21.6513 6.91457C21.5092 7.25773 21.3008 7.56954 21.0382 7.83218L7.53818 21.3322L2.03818 22.8322L3.53818 17.3322L17.0382 3.83218Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Menu() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M21.2402 16.3886V8.38864C21.2398 8.03791 21.1472 7.69345 20.9717 7.3898C20.7962 7.08615 20.5439 6.834 20.2402 6.65864L13.2402 2.65864C12.9361 2.4831 12.5912 2.39069 12.2402 2.39069C11.8891 2.39069 11.5442 2.4831 11.2402 2.65864L4.24017 6.65864C3.93644 6.834 3.68415 7.08615 3.50863 7.3898C3.33312 7.69345 3.24053 8.03791 3.24017 8.38864V16.3886C3.24053 16.7394 3.33312 17.0838 3.50863 17.3875C3.68415 17.6911 3.93644 17.9433 4.24017 18.1186L11.2402 22.1186C11.5442 22.2942 11.8891 22.3866 12.2402 22.3866C12.5912 22.3866 12.9361 22.2942 13.2402 22.1186L20.2402 18.1186C20.5439 17.9433 20.7962 17.6911 20.9717 17.3875C21.1472 17.0838 21.2398 16.7394 21.2402 16.3886Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M7.74017 4.59863L12.2402 7.19863L16.7402 4.59863\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M7.74017 20.1786V14.9886L3.24017 12.3886\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M21.2402 12.3886L16.7402 14.9886V20.1786\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M3.51018 7.34863L12.2402 12.3986L20.9702 7.34863\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M12.2402 22.4686V12.3886\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Image() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M19.6369 3.80093H5.63693C4.53236 3.80093 3.63693 4.69636 3.63693 5.80093V19.8009C3.63693 20.9055 4.53236 21.8009 5.63693 21.8009H19.6369C20.7415 21.8009 21.6369 20.9055 21.6369 19.8009V5.80093C21.6369 4.69636 20.7415 3.80093 19.6369 3.80093Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M9.13693 10.8009C9.96536 10.8009 10.6369 10.1294 10.6369 9.30093C10.6369 8.47251 9.96536 7.80093 9.13693 7.80093C8.30851 7.80093 7.63693 8.47251 7.63693 9.30093C7.63693 10.1294 8.30851 10.8009 9.13693 10.8009Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M21.6369 15.8009L16.6369 10.8009L5.63693 21.8009\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Link() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path\r\n                d=\"M10 13C10.4295 13.5741 10.9774 14.0492 11.6066 14.3929C12.2357 14.7367 12.9315 14.9411 13.6467 14.9923C14.3618 15.0435 15.0796 14.9404 15.7513 14.6898C16.4231 14.4392 17.0331 14.0471 17.54 13.54L20.54 10.54C21.4508 9.59699 21.9548 8.33397 21.9434 7.02299C21.932 5.71201 21.4061 4.45794 20.4791 3.5309C19.5521 2.60386 18.298 2.07802 16.987 2.06663C15.676 2.05523 14.413 2.55921 13.47 3.47L11.75 5.18\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M14 11C13.5705 10.4259 13.0226 9.95081 12.3935 9.60706C11.7643 9.2633 11.0685 9.05888 10.3534 9.00766C9.63821 8.95645 8.92041 9.05963 8.24866 9.31021C7.5769 9.5608 6.96689 9.95293 6.46 10.46L3.46 13.46C2.54921 14.403 2.04524 15.666 2.05663 16.977C2.06802 18.288 2.59387 19.542 3.52091 20.4691C4.44795 21.3961 5.70201 21.922 7.013 21.9334C8.32398 21.9448 9.58699 21.4408 10.53 20.53L12.24 18.82\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Link() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 25\">\r\n            <path\r\n                d=\"M23 3.5C22.0424 4.17548 20.9821 4.69211 19.86 5.03C19.2577 4.33751 18.4573 3.84669 17.567 3.62393C16.6767 3.40116 15.7395 3.4572 14.8821 3.78445C14.0247 4.11171 13.2884 4.6944 12.773 5.45372C12.2575 6.21303 11.9877 7.11234 12 8.03V9.03C10.2426 9.07557 8.50127 8.68581 6.93101 7.89545C5.36074 7.10508 4.01032 5.93864 3 4.5C3 4.5 -1 13.5 8 17.5C5.94053 18.898 3.48716 19.5989 1 19.5C10 24.5 21 19.5 21 8C20.9991 7.72145 20.9723 7.44359 20.92 7.17C21.9406 6.16349 22.6608 4.89271 23 3.5V3.5Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","export default function Discord() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"26\" height=\"26\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 26\">\r\n            <g clipPath=\"url(#clip0_29:18)\">\r\n                <path d=\"M16.7119 12.6759C16.7119 13.4384 16.1494 14.0634 15.4369 14.0634C14.7369 14.0634 14.1619 13.4384 14.1619 12.6759C14.1619 11.9134 14.7244 11.2884 15.4369 11.2884C16.1494 11.2884 16.7119 11.9134 16.7119 12.6759ZM10.8744 11.2884C10.1619 11.2884 9.59943 11.9134 9.59943 12.6759C9.59943 13.4384 10.1744 14.0634 10.8744 14.0634C11.5869 14.0634 12.1494 13.4384 12.1494 12.6759C12.1619 11.9134 11.5869 11.2884 10.8744 11.2884ZM24.0744 3.37593V25.8009C20.9253 23.018 21.9324 23.9392 18.2744 20.5384L18.9369 22.8509H4.76193C3.34943 22.8509 2.19943 21.7009 2.19943 20.2759V3.37593C2.19943 1.95093 3.34943 0.800934 4.76193 0.800934H21.5119C22.9244 0.800934 24.0744 1.95093 24.0744 3.37593ZM20.5119 15.2259C20.5119 11.2009 18.7119 7.93843 18.7119 7.93843C16.9119 6.58843 15.1994 6.62593 15.1994 6.62593L15.0244 6.82593C17.1494 7.47593 18.1369 8.41343 18.1369 8.41343C15.1676 6.78604 11.6797 6.78575 8.79943 8.05093C8.33693 8.26343 8.06193 8.41343 8.06193 8.41343C8.06193 8.41343 9.09943 7.42593 11.3494 6.77593L11.2244 6.62593C11.2244 6.62593 9.51193 6.58843 7.71193 7.93843C7.71193 7.93843 5.91193 11.2009 5.91193 15.2259C5.91193 15.2259 6.96193 17.0384 9.72443 17.1259C9.72443 17.1259 10.1869 16.5634 10.5619 16.0884C8.97443 15.6134 8.37443 14.6134 8.37443 14.6134C8.55832 14.7421 8.86154 14.909 8.88693 14.9259C10.9968 16.1075 13.9938 16.4946 16.6869 15.3634C17.1244 15.2009 17.6119 14.9634 18.1244 14.6259C18.1244 14.6259 17.4994 15.6509 15.8619 16.1134C16.2369 16.5884 16.6869 17.1259 16.6869 17.1259C19.4494 17.0384 20.5119 15.2259 20.5119 15.2259V15.2259Z\" fill={strokeColor}/>\r\n            </g>\r\n            <defs>\r\n                <clipPath id=\"clip0_29:18\">\r\n                    <rect width=\"25\" height=\"25\" fill=\"white\" transform=\"translate(0.636932 0.800934)\"/>\r\n                </clipPath>\r\n            </defs>\r\n        </svg>\r\n    );\r\n}\r\n","import \"./Form.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { submitProject } from \"../../api\";\r\nimport Mail from \"../icons/Mail\";\r\nimport User from \"../icons/User\";\r\nimport Pen from \"../icons/Pen\";\r\nimport Box from \"../icons/Box\";\r\nimport Image from \"../icons/Image\";\r\nimport Link from \"../icons/Link\";\r\nimport Twitter from \"../icons/Twitter\";\r\nimport Discord from \"../icons/Discord\";\r\n\r\nexport default function Form({ setState }) {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        setState({\r\n            loading: true,\r\n            error: \"\",\r\n            success: false\r\n        });\r\n        try {\r\n            await submitProject(data);\r\n\r\n            setState({\r\n                loading: false,\r\n                error: \"\",\r\n                success: true\r\n            });\r\n        } catch (err) {\r\n            setState({\r\n                loading: false,\r\n                error: \"Something went wrong. Please try again later!\",\r\n                success: true\r\n            });\r\n        }        \r\n    }\r\n \r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <h2>List your project</h2>\r\n            <div className=\"form__field\">\r\n                <label>Email*</label>\r\n                <div className={`form__field__input ${errors.email ? \"form-error\" : \"\"}`}>\r\n                    <Mail />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"example@gmail.com\"\r\n                        {...register(\"email\", { required: true, maxLength: 100 })}\r\n                    />\r\n                </div>\r\n                {errors.email && errors.email.type === \"required\" && <p className=\"form-error\">Email is required.</p>}\r\n                {errors.email && errors.email.type === \"maxLength\" && <p className=\"form-error\">Max length exceeded.</p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Project name*</label>\r\n                <div className={`form__field__input ${errors.projectName ? \"form-error\" : \"\"}`}>\r\n                    <User />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Catchy Name\"\r\n                        {...register(\"projectName\", { required: true, maxLength: 100 })}\r\n                    />\r\n                </div>\r\n                {errors.projectName && errors.projectName.type === \"required\" && <p className=\"form-error\">Project name is required.</p>}\r\n                {errors.projectName && errors.projectName.type === \"maxLength\" && <p className=\"form-error\">Max length exceeded.</p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Short description*</label>\r\n                    <div className={`form__field__input ${errors.shortDesc ? \"form-error\" : \"\"}`}>\r\n                    <Pen />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Short and sweet.\"\r\n                        {...register(\"shortDesc\", { required: true, maxLength: 500 })}\r\n                    />\r\n                </div>\r\n                {errors.shortDesc && errors.shortDesc.type === \"required\" && <p className=\"form-error\">Short description is required.</p>}\r\n                {errors.shortDesc && errors.shortDesc.type === \"maxLength\" && <p className=\"form-error\">Max length exceeded.</p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Contract address*</label>\r\n                <div className={`form__field__input ${errors.projectAddress ? \"form-error\" : \"\"}`}>\r\n                    <Box />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"0x0000000000000000000000000000000000000000\"\r\n                        {...register(\"projectAddress\", { required: true, maxLength: 64 })}\r\n                    />\r\n                </div>\r\n                {errors.projectAddress && errors.projectAddress.type === \"required\" && <p className=\"form-error\">Contract address is required.</p>}\r\n                {errors.projectAddress && errors.projectAddress.type === \"maxLength\" && <p className=\"form-error\">Max length exceeded.</p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Profile image URL*</label>\r\n                <div className={`form__field__input ${errors.icon ? \"form-error\" : \"\"}`}>\r\n                    <Image />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"https://static-image/avatar.png\"\r\n                        {...register(\"icon\", { required: true })}\r\n                    />\r\n                </div>\r\n                {errors.icon && <p className=\"form-error\">Profile image URL is required.</p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Banner image URL*</label>\r\n                <div className={`form__field__input ${errors.banner ? \"form-error\" : \"\"}`}>\r\n                    <Image />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"https://static-image/banner.png\"\r\n                        {...register(\"banner\", { required: true })}\r\n                    />\r\n                </div>\r\n                {errors.banner && <p className=\"form-error\">Banner image URL is required.</p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Website URL</label>\r\n                <div className={`form__field__input ${errors.projectUrl ? \"form-error\" : \"\"}`}>\r\n                    <Link />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"https://website.com/\"\r\n                        {...register(\"projectUrl\", { required: false })}\r\n                    />\r\n                </div>\r\n                {errors.projectAddress && <p className=\"form-error\"></p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Twitter Handle</label>\r\n                    <div className={`form__field__input ${errors.projectTwitter ? \"form-error\" : \"\"}`}>\r\n                    <Twitter />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"IAmHandle\"\r\n                        {...register(\"projectTwitter\", { required: false })}\r\n                    />\r\n                </div>\r\n                {errors.projectTwitter && <p className=\"form-error\"></p>}\r\n            </div>\r\n            <div className=\"form__field\">\r\n                <label>Discord server</label>\r\n                    <div className={`form__field__input ${errors.projectDiscord ? \"form-error\" : \"\"}`}>\r\n                    <Discord />\r\n                    <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"https://discord.gg/aBcDeFgHi\"\r\n                        {...register(\"projectDiscord\", { required: false })}\r\n                    />\r\n                </div>\r\n                {errors.projectDiscord && <p className=\"form-error\"></p>}\r\n            </div>\r\n            <input type=\"submit\" />\r\n      </form>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport Error from \"../main/Error\";\r\nimport Loading from \"../main/Loading\";\r\nimport Success from \"../main/Success\";\r\nimport Form from \"../main/Form\";\r\n\r\nexport default function List() {\r\n    // ~~~ Keeping tabs on loading, error and success ~~~\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        error: \"\",\r\n        success: false\r\n    });\r\n\r\n    if(state.error) return (\r\n        <section>\r\n            <Error message={state.error} />\r\n        </section>\r\n    );\r\n\r\n    if(state.loading) return (\r\n        <section>\r\n            <Loading />\r\n        </section>\r\n    );\r\n\r\n    if(state.success) return (\r\n        <section>\r\n            <Success message=\"Thank you for your submission! We will contact you shortly. \" />\r\n        </section>\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <Form setState={setState}/>\r\n        </section>\r\n    );\r\n}\r\n","import \"./ModalRich.css\";\r\n\r\nexport default function ModalRich({ showModalRich, closeModalRich }) {\r\n    return (\r\n        <>\r\n            {\r\n                showModalRich &&\r\n                <div\r\n                    className=\"modal__rich__wrapper\"\r\n                    onClick={() => closeModalRich()}\r\n                ></div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import \"./BtnRichList.css\";\r\nimport ArrowDown from \"../icons/ArrowDown\";\r\nimport ArrowUp from \"../icons/ArrowUp\";\r\n\r\nexport default function BtnRichList({\r\n    showRichOptions,\r\n    openModalRich,\r\n    closeModalRich,\r\n    options,\r\n    valueSelected,\r\n    setValueSelected\r\n}) {\r\n\r\n    const handleOnClickSelect = () => {\r\n        openModalRich();\r\n    }\r\n\r\n    const handleOnClickOption = e => {\r\n        closeModalRich();\r\n        setValueSelected({\r\n            name: e.currentTarget.name,\r\n            address: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"btn-rich-list\">\r\n            <button\r\n                className={`btn-rich-list__button ${showRichOptions ? \"active\" : \"\"}`}\r\n                onClick={handleOnClickSelect}\r\n            >\r\n                <h1>{`${valueSelected.name} Rich list`}</h1>\r\n                {\r\n                    !showRichOptions &&\r\n                    <ArrowDown />\r\n                }\r\n                {\r\n                    showRichOptions &&\r\n                    <ArrowUp />\r\n                }\r\n            </button>\r\n            {\r\n                showRichOptions &&\r\n                <div className=\"btn-rich-list__options\">\r\n                    {\r\n                        options\r\n                            .filter(elem => elem.address !== valueSelected.address)\r\n                            .map((elem, index) => (\r\n                            <button\r\n                                key={index}\r\n                                value={elem.address}\r\n                                name={elem.name}\r\n                                onClick={handleOnClickOption}\r\n                            >\r\n                                <img src={elem.icon} alt=\"icon\"></img>\r\n                                <span>{elem.name}</span>\r\n                            </button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"./ChartSankey.css\";\r\nimport { select } from \"d3-selection\";\r\nimport { drag } from \"d3-drag\";\r\nimport { sankey, sankeyLinkHorizontal } from \"d3-sankey\";\r\nimport { intlNumFormat } from \"../../helpers/functions\";\r\n\r\nexport default function ChartSankey({\r\n    state,\r\n    width,\r\n    data\r\n}) {\r\n    const svgRef = useRef(null);\r\n    const tooltipRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(!width) return;\r\n        if(!svgRef.current) return;\r\n        if(data?.length === 0) return;\r\n\r\n        // Compute keys and colors for updated dnd data\r\n        const rowIds = state.dndData.columns[\"column-1\"].rowIds;\r\n        if(rowIds.length === 0) return;\r\n\r\n        const keys = [];\r\n        const colors = [];\r\n        rowIds.forEach(id => {\r\n            keys.push(state.dndData.rows[id].key);\r\n            colors.push(state.dndData.rows[id].color);\r\n        });\r\n        const canvas = svgRef.current;\r\n        const margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n        const minWidth = 600;\r\n        const outerWidth = width > minWidth ? width - 40 : minWidth - 20;\r\n        const outerHeight = 500;\r\n        const innerWidth = outerWidth - margin.left - margin.right;\r\n        const innerHeight = outerHeight - margin.top - margin.bottom;\r\n\r\n        // Render chart\r\n        const chart = sankey()\r\n            .nodeWidth(10)\r\n            .nodePadding(40)\r\n            .extent([[0, 0], [innerWidth, innerHeight]]);  \r\n\r\n        const graph = computeGraph();\r\n\r\n        const { nodes, links } = chart({\r\n            nodes: graph.nodes.map(d => Object.assign({}, d)),\r\n            links: graph.links.map(d => Object.assign({}, d))\r\n        });\r\n\r\n        const svg = select(svgRef.current)\r\n            .data([null])\r\n            .join(\"svg\")\r\n            .classed(\"chart-sankey__svg\", true)\r\n            .attr(\"width\", outerWidth)\r\n            .attr(\"height\", outerHeight)\r\n            .attr(\"viewBox\", [0, 0, outerWidth, outerHeight]);\r\n\r\n        const tooltip = select(tooltipRef.current)\r\n            .style(\"opacity\", 0);\r\n\r\n        const chartLabels = svg\r\n            .selectAll(\".chart__label--name\")\r\n            .data(nodes)\r\n            .join(\"text\")\r\n            .classed(\"chart__label--name\", true)       \r\n            .attr(\"id\", (d,i) => `chart__label--name${i}`)\r\n            .attr(\"x\", d => {\r\n                return d.x0 < innerWidth / 2\r\n                    ? d.x1 + 6\r\n                    : d.x0 - 6;\r\n            })\r\n            .attr(\"y\", d => (d.y1 + d.y0) / 2)\r\n            .attr(\"dy\", 0)\r\n            .attr(\"text-anchor\", d => {\r\n                return d.x0 < innerWidth / 2\r\n                    ? \"start\"\r\n                    : \"end\";\r\n            })\r\n            .text((d, i) => {\r\n                const output = `${d[\"name\"]}`;\r\n                return output;\r\n            });\r\n\r\n        const chartValues = svg\r\n            .selectAll(\".chart__label--value\")\r\n            .data(nodes)\r\n            .join(\"text\")\r\n            .classed(\"chart__label--value\", true)       \r\n            .attr(\"id\", (d,i) => `chart__label--value${i}`)\r\n            .attr(\"x\", d => {\r\n                return d.x0 < innerWidth / 2\r\n                    ? d.x1 + 6\r\n                    : d.x0 - 6;\r\n            })\r\n            .attr(\"y\", d => (d.y1 + d.y0) / 2)\r\n            .attr(\"dy\", 16)\r\n            .attr(\"text-anchor\", d => {\r\n                return d.x0 < innerWidth / 2\r\n                    ? \"start\"\r\n                    : \"end\";\r\n            })\r\n            .text(d => {\r\n                return `owners: ${intlNumFormat(d[\"value\"])}`;\r\n            });\r\n\r\n        const gNodes = svg\r\n            .selectAll(\".g-nodes\")\r\n            .data([null])\r\n            .join(\"g\")\r\n            .classed(\"g-nodes\", true);\r\n\r\n        const gNodesRect = gNodes\r\n            .selectAll(\".g-nodes__rect\")\r\n            .data(nodes)\r\n            .join(\"rect\")\r\n            .classed(\"g-nodes__rect\", true)\r\n            .attr(\"x\", d => d.x0)\r\n            .attr(\"y\", d => d.y0)\r\n            .attr(\"height\", d => d.y1 - d.y0)\r\n            .attr(\"width\", d => d.x1 - d.x0)\r\n            .call(drag()\r\n                .subject(d => d)\r\n                .on(\"drag\", onDragMove))\r\n            .style(\"fill\", (d, i) => colors[d[\"layer\"]]);\r\n\r\n        const gLinks = svg\r\n            .selectAll(\".g-links\")\r\n            .data([null])\r\n            .join(\"g\")\r\n            .classed(\"g-links\", true);\r\n\r\n        const gLinksPath = gLinks\r\n            .selectAll(\".g-links__path\")\r\n            .data(links)\r\n            .join(\"path\")\r\n            .classed(\"g-links__path\", true)\r\n            .attr(\"d\", sankeyLinkHorizontal())\r\n            .style(\"stroke\", (d, i) => colors[d.source[\"layer\"]])\r\n            .style(\"stroke-width\", d => d.width)\r\n            .style(\"opacity\", 0.3)\r\n            .on(\"mouseover\", onMouseOver)\r\n            .on(\"mousemove\", onMouseMove)\r\n            .on(\"mouseout\", onMouseOut);\r\n\r\n        function onDragMove(e, d) {\r\n            const rectY = Number(select(this).attr(\"y\"));\r\n            d.y0 = d.y0 + e.dy;\r\n            const yTranslate = d.y0 - rectY;\r\n\r\n            select(this)\r\n                .attr(\"transform\", `translate(0,${yTranslate})`);\r\n\r\n            select(`#chart__label--name${d.index}`)\r\n                .attr(\"transform\", `translate(0,${yTranslate})`);\r\n\r\n            select(`#chart__label--value${d.index}`)\r\n                .attr(\"transform\", `translate(0,${yTranslate})`);\r\n    \r\n            sankey()\r\n                .update({nodes, links});\r\n            \r\n            gLinksPath\r\n                .attr(\"d\", sankeyLinkHorizontal());\r\n        }\r\n\r\n        function onMouseOver(e) {\r\n            select(this)\r\n                .style(\"opacity\", 0.8);\r\n\r\n            tooltip\r\n                .style(\"opacity\", 1);\r\n        }\r\n\r\n        function onMouseMove(e, d) {\r\n            const node = d;\r\n            const xPos = e.layerX;\r\n            const yPos = e.layerY;\r\n\r\n            tooltip\r\n                .style(\"top\", `${yPos + 20}px`)\r\n                .style(\"left\", `${xPos + 20}px`)\r\n                .style(\"transform\", (d,i) => {\r\n                    const newXPos = (width - xPos) > width / 2 ? 0 : \"calc(-100% - 20px)\";\r\n                    const newYPos = yPos < 400 ? 0 : \"calc(-100% - 20px)\";\r\n                    return `translate(${newXPos}, ${newYPos})`;\r\n                });\r\n\r\n            tooltip\r\n                .selectAll(\".tooltip__value\")\r\n                .html((d, i) => {\r\n                    return i === 0 \r\n                        ? `${node.source.name} → ${node.target.name}`\r\n                        : intlNumFormat(node.value); \r\n            });\r\n        }\r\n\r\n        function onMouseOut(e) {\r\n            select(this)\r\n                .style(\"opacity\", 0.3);\r\n\r\n            tooltip\r\n                .style(\"opacity\", 0);\r\n        }\r\n\r\n        function computeGraph() {\r\n            let index = -1;\r\n            const nodes = [];\r\n            const nodeByKey = new Map();\r\n            const indexByKey = new Map();\r\n            const links = [];\r\n\r\n            for (const k of keys) {\r\n                for (const d of data) {\r\n                    const key = JSON.stringify([k, d[k]]);\r\n                    if (nodeByKey.has(key)) continue;\r\n                    const node = {name: d[k]};\r\n                    nodes.push(node);\r\n                    nodeByKey.set(key, node);\r\n                    indexByKey.set(key, ++index);\r\n                }\r\n            }\r\n\r\n                for (let i = 1; i < keys.length; ++i) {\r\n                    const a = keys[i - 1];\r\n                    const b = keys[i];\r\n                    const prefix = keys.slice(0, i + 1);\r\n                    const linkByKey = new Map();\r\n                    for (const d of data) {\r\n                        const names = prefix.map(k => d[k]);\r\n                        const key = JSON.stringify(names);\r\n                        const value = Number(d.value) || 1;\r\n                        let link = linkByKey.get(key);\r\n                        if (link) { link.value += value; continue; }\r\n                            link = {\r\n                            source: indexByKey.get(JSON.stringify([a, d[a]])),\r\n                            target: indexByKey.get(JSON.stringify([b, d[b]])),\r\n                            names,\r\n                            value\r\n                        };\r\n                        links.push(link);\r\n                        linkByKey.set(key, link);\r\n                    }\r\n                }\r\n\r\n            return {nodes, links};\r\n        }\r\n\r\n        return () => {\r\n            gNodesRect\r\n                .attr(\"transform\", \"translate(0,0)\");\r\n\r\n            chartLabels\r\n                .attr(\"transform\", `translate(0,0)`);\r\n\r\n            chartValues\r\n                .attr(\"transform\", `translate(0,0)`);\r\n\r\n            if (canvas) {\r\n                while (canvas.firstChild) {\r\n                    canvas.removeChild(canvas.firstChild);\r\n                }\r\n            }\r\n        }\r\n    }, [state, width, data]);\r\n\r\n    return (\r\n        <div className=\"chart-sankey\">\r\n            {\r\n                width && data?.length > 0 &&\r\n                <div className=\"chart-sankey__tooltip\" ref={tooltipRef}>\r\n                    <div>\r\n                        <span className=\"tooltip__name\">Flow:</span>\r\n                        <span className=\"tooltip__value\">0</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"tooltip__name\">Owners:</span>\r\n                        <span className=\"tooltip__value\">0</span>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <svg ref={svgRef}></svg>\r\n        </div>\r\n    );\r\n}\r\n","export default function Move() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"24\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 25\">\r\n            <path\r\n                d=\"M5 9.5L2 12.5L5 15.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M9 5.5L12 2.5L15 5.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M15 19.5L12 22.5L9 19.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M19 9.5L22 12.5L19 15.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M2 12.5H22\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M12 2.5V22.5\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import \"./Row.css\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Move from \"../icons/Move\";\r\n\r\nexport default function Row({ row, index }) {\r\n\r\n    return (\r\n        <Draggable\r\n            draggableId={row.id}\r\n            index={index}\r\n        >\r\n            {(provided, snapshot) => (\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className={`\r\n                        dnd-row\r\n                        ${snapshot.isDragging ? \"isDragging\" : \"\"}\r\n                    `}\r\n                >\r\n                    <div style={{borderLeftColor:row.color}}>{row.key.toUpperCase()}</div>\r\n                    <Move />\r\n                </div>\r\n            )\r\n            }\r\n        </Draggable >\r\n    );\r\n}\r\n","import \"./Column.css\"\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Row from \"./Row\";\r\n\r\nexport default function Column({ column, rows }) {\r\n    return (\r\n        <div className=\"dnd-column\">\r\n            <Droppable\r\n                droppableId={column.id}\r\n                direction=\"horizontal\"\r\n            >\r\n                {(provided, snapshot) => (\r\n                    <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className={`\r\n                            dnd-column__rows \r\n                            ${snapshot.isDraggingOver ? \"isDraggingOver\" : \"\"}`}\r\n                        style={{gridTemplateColumns: `repeat(${rows.length}, minmax(154px, 1fr)`}}\r\n                    >\r\n                        {\r\n                            rows.map((row, index) => (\r\n                                <Row\r\n                                    key={row.id}\r\n                                    row={row}\r\n                                    index={index}\r\n                                />\r\n                            ))\r\n                        }\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </div>\r\n    );\r\n}\r\n","import \"./DnD.css\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Column from \"./Column\";\r\n\r\nexport default function DnD({ state, dispatch }) {\r\n\r\n    const handleOnDragEnd = result => {\r\n        const { destination, source, draggableId } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const start = state.dndData.columns[source.droppableId];\r\n        const finish = state.dndData.columns[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const column = state.dndData.columns[source.droppableId];\r\n            const newRowIds = [...column.rowIds];\r\n            newRowIds.splice(source.index, 1);\r\n            newRowIds.splice(destination.index, 0, draggableId);\r\n\r\n            const newColumn = {\r\n                ...column,\r\n                rowIds: newRowIds\r\n            }\r\n\r\n            const newData = {\r\n                ...state.dndData,\r\n                columns: {\r\n                    ...state.dndData.columns,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            }\r\n            dispatch({\r\n                type: \"updateDndDataOrder\", payload: {\r\n                    orderedDndData: newData\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const startRowIds = [...start.rowIds];\r\n        startRowIds.splice(source.index, 1);\r\n        const newStart = {\r\n            ...start,\r\n            rowIds: startRowIds\r\n        }\r\n\r\n        const finishRowIds = [...finish.rowIds];\r\n        finishRowIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            rowIds: finishRowIds\r\n        }\r\n\r\n        const newData = {\r\n            ...state.dndData,\r\n            columns: {\r\n                ...state.dndData.columns,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish\r\n            }\r\n        }\r\n        dispatch({\r\n            type: \"updateDndDataOrder\", payload: {\r\n                orderedDndData: newData\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <DragDropContext\r\n            onDragEnd={handleOnDragEnd}\r\n        >\r\n            <div className=\"dnd\">\r\n                {\r\n                    state.dndData.columnOrder?.length > 0 &&\r\n                    state.dndData.columnOrder.map(columnId => {\r\n                        const column = state.dndData.columns[columnId];\r\n                        const rows = column.rowIds.map(rowId => state.dndData.rows[rowId]);\r\n\r\n                        return <Column\r\n                            key={column.id}\r\n                            column={column}\r\n                            rows={rows}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </DragDropContext>\r\n    );\r\n}\r\n","import { useContext, useState, useEffect, useRef, useReducer } from \"react\";\r\nimport { DataContext } from \"../../context/DataContext\";\r\nimport { getSankeyData } from \"../../api\";\r\nimport { DEBOUNCE_DELAY, INITIAL_DND, SANKEY_COLORS } from \"../../helpers/constants\";\r\nimport { debounce } from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Error from \"../main/Error\";\r\nimport Loading from \"../main/Loading\";\r\nimport ModalRich from \"../modals/ModalRich\";\r\nimport BtnRichList from \"../buttons/BtnRichList\";\r\nimport ChartSankey from \"../charts/ChartSankey\";\r\nimport DnD from \"../dragndrop/DnD\";\r\n\r\nfunction reducer(state, action) {\r\n    const error = action.payload.error;\r\n    const loading = action.payload.loading;\r\n    const dndData = action.payload.dndData;\r\n    const orderedDndData = action.payload.orderedDndData;\r\n  \r\n    switch (action.type) {\r\n        case \"updateDndDataOrder\":\r\n            return {\r\n                ...state,\r\n                dndData: orderedDndData\r\n            };\r\n        case \"updateDndData\":\r\n            return {\r\n                ...state,\r\n                dndData: dndData\r\n            };\r\n        case \"updateLoading\":\r\n            return {\r\n                ...state,\r\n                loading: loading\r\n            };\r\n        case \"updateError\":\r\n            return {\r\n                ...state,\r\n                error: error\r\n            };\r\n        case \"reset\":\r\n            return {\r\n                dndData: dndData,\r\n                loading: loading,\r\n                error: error\r\n            };\r\n        case \"init\":\r\n            return action.payload;\r\n        default:\r\n            return {};\r\n    }\r\n}\r\n\r\nexport default function Rich() {\r\n    const dataContext = useContext(DataContext);\r\n    const chartWrapperRef = useRef(null);\r\n    // ~~~ Modal ~~~\r\n    const [showModalRich, setShowModalRich] = useState(false);\r\n    const [showRichOptions, setShowRichOptions] = useState(false);\r\n    // ~~~ Keeping tabs on loading and error ~~~\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        dndData: INITIAL_DND,\r\n        loading: true,\r\n        error: \"\"\r\n    });\r\n    // ~~~ Data ~~~\r\n    const [width, setWidth] = useState(0);\r\n    const [valueSelected, setValueSelected] = useState({\r\n        name: \"Alpies\",\r\n        address: \"0x57a7c5d10c3f87f5617ac1c60da60082e44d539e\"\r\n    });\r\n    const [sankeyData, setSankeyData] = useState([]);\r\n    const [attributes, setAttributes] = useState([]);\r\n    \r\n    // ~~~ Observer that reads with on resize to set width for chart ~~~\r\n    useEffect(() => {\r\n        const debouncedHandleObserver = debounce(entries => {\r\n            const newWidth = entries[0].contentRect.width;\r\n            setWidth(newWidth);\r\n        }, DEBOUNCE_DELAY);\r\n\r\n        const elem = chartWrapperRef?.current;\r\n        const observer = new ResizeObserver(debouncedHandleObserver);\r\n\r\n        if(elem) {\r\n            observer.observe(elem);\r\n        }\r\n\r\n        return () => {\r\n            observer.unobserve(elem);\r\n        }\r\n    }, []);\r\n\r\n    // ~~~ API calls ~~~\r\n    // ~~~ Fetch data for Sankey Chart ~~~\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getSankeyData(valueSelected.address);\r\n                    setAttributes(response.attributes);\r\n                    setSankeyData(response.data);\r\n                } catch (err) {\r\n                    dispatch({\r\n                        type: \"updateError\", payload: {\r\n                            error: err.message\r\n                        }\r\n                    });\r\n                    dispatch({\r\n                        type: \"updateLoading\", payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n            dispatch({\r\n                type: \"reset\", payload: {\r\n                    dndData: INITIAL_DND,\r\n                    loading: true,\r\n                    error: \"\"\r\n                }\r\n            });\r\n        }\r\n    }, [valueSelected]);\r\n\r\n    useEffect(() => {\r\n        // Create the initial data for DnD\r\n        if(attributes?.length === 0) return;\r\n        const column = \"column-1\";\r\n\r\n        const rowIds = [];\r\n        const rows = {};\r\n        attributes.forEach((attribute, index) => {\r\n            const id = uuidv4();\r\n            rowIds.push(id);\r\n            rows[id] = {\r\n                id: id,\r\n                key: attribute,\r\n                color: SANKEY_COLORS[index]\r\n            }\r\n        });\r\n        \r\n        const newDndData = {\r\n            ...INITIAL_DND,\r\n            columns: {\r\n                ...INITIAL_DND.columns,\r\n                [column]: {\r\n                    ...INITIAL_DND.columns[column],\r\n                    rowIds: rowIds\r\n                }\r\n            },\r\n            rows: rows\r\n        }\r\n\r\n        // Dispatch to remove error and loading and update DnD data\r\n        dispatch({\r\n            type: \"updateError\", payload: {\r\n                error: \"\"\r\n            }\r\n        });\r\n        dispatch({\r\n            type: \"updateLoading\", payload: {\r\n                loading: false\r\n            }\r\n        });\r\n        dispatch({\r\n            type: \"updateDndData\", payload: {\r\n                dndData: newDndData\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            dispatch({\r\n                type: \"reset\", payload: {\r\n                    dndData: INITIAL_DND,\r\n                    loading: true,\r\n                    error: \"\"\r\n                }\r\n            });\r\n        }\r\n    }, [attributes]);\r\n\r\n    const closeModalRich = () => {\r\n        setShowRichOptions(false);\r\n        setShowModalRich(false);\r\n    }\r\n\r\n    const openModalRich = () => {\r\n        setShowRichOptions(true);\r\n        setShowModalRich(true);\r\n    }\r\n\r\n    if(state.error) return (\r\n        <section>\r\n            <div ref={chartWrapperRef} className=\"wrapper global-width\">\r\n                <Error message={state.error} />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    if(state.loading) return (\r\n        <section>\r\n            <div ref={chartWrapperRef} className=\"wrapper global-width\">\r\n                <Loading />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <div ref={chartWrapperRef} className=\"global-width\">\r\n                <ModalRich\r\n                    showModalRich={showModalRich}\r\n                    closeModalRich={closeModalRich}\r\n                />\r\n                {\r\n                    dataContext.searchList?.length > 0 &&\r\n                    <div className=\"rich-wrapper\">\r\n                        <BtnRichList\r\n                            showRichOptions={showRichOptions}\r\n                            openModalRich={openModalRich}\r\n                            closeModalRich={closeModalRich}\r\n                            options={dataContext.searchList}\r\n                            valueSelected={valueSelected}\r\n                            setValueSelected={setValueSelected}\r\n                        />\r\n                        <p>Visualize the distribution of current owners for the {valueSelected.name} collection. The diagram displays the flow of current owners into the following:<br></br>- intervals for the number of items (NFTs) that the owners currently hold; <br></br>- intervals for the total amount in BNB of those items based on the last amount transferred.</p>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    sankeyData.length > 0 &&\r\n                    <div className=\"dnd-wrappper\">\r\n                        <DnD\r\n                            state={state}\r\n                            dispatch={dispatch}\r\n                        />\r\n                        <ChartSankey\r\n                            width={width}\r\n                            state={state}\r\n                            data={sankeyData}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","import \"./BtnCrum.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function BtnCrum({ path, label }) {\r\n    return (\r\n        <Link\r\n            to={`/${path}`}\r\n            className=\"btn-crum\"\r\n        >\r\n            <div>{label}</div>\r\n            <div>&#62;</div>\r\n        </Link>\r\n    );\r\n}\r\n","import \"./BtnTab.css\";\r\n\r\nexport default function BtnTab({ tab, setTab, name }) {\r\n    return (\r\n        <button\r\n            className={`btn-tab ${tab === name ? \"active\" : \"\"}`}\r\n            name={name}\r\n            onClick={e => setTab(e.currentTarget.name)}\r\n        >\r\n            {name}\r\n        </button>\r\n    );\r\n}\r\n","import \"./CardCollection.css\";\r\nimport Link from \"../icons/Link\";\r\nimport Twitter from \"../icons/Twitter\";\r\nimport Box from \"../icons/Box\";\r\nimport Discord from \"../icons/Discord\";\r\nimport BtnTab from \"../buttons/BtnTab\";\r\n\r\nexport default function CardCollection({ collectionDetails, tab, setTab }) {\r\n    const {\r\n        name,\r\n        icon,\r\n        address,\r\n        banner,\r\n        desc,\r\n        twitter,\r\n        url,\r\n        discord\r\n    } = collectionDetails;\r\n\r\n    return (\r\n        <div className=\"card-collection\">\r\n            {\r\n                banner &&\r\n                <img\r\n                    className=\"card-collection__banner\"\r\n                    src={banner}\r\n                    alt={name}\r\n                ></img>\r\n            }\r\n            <div className=\"card-collection__details\">\r\n                {\r\n                    icon &&\r\n                    <div className=\"card-collection__icon\">\r\n                        <img\r\n                            src={icon}\r\n                            alt={name}\r\n                        ></img>\r\n                    </div>\r\n                }\r\n                <div className=\"card-collection__links\">\r\n                    {\r\n                        address &&\r\n                        <a className=\"center\" href={`https://bscscan.com/address/${address}`} target=\"_blank\" rel=\"noreferrer\">\r\n                            <Box />\r\n                        </a>\r\n                    }\r\n                    {\r\n                        url &&\r\n                        <a className=\"center\" href={url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <Link />\r\n                        </a>\r\n                    }\r\n                    {\r\n                        twitter &&\r\n                        <a className=\"center\" href={twitter} target=\"_blank\" rel=\"noreferrer\">\r\n                            <Twitter />\r\n                        </a>\r\n                    }\r\n                    {\r\n                        discord &&\r\n                        <a className=\"center\" href={discord} target=\"_blank\" rel=\"noreferrer\">\r\n                            <Discord />\r\n                        </a>\r\n                    }\r\n                </div>\r\n                <div className=\"card-collection__name\">\r\n                    {\r\n                        name &&\r\n                        <h2>{name}</h2>\r\n                    }\r\n                    {\r\n                        desc &&\r\n                        <div>{desc}</div>\r\n                    }\r\n                </div>\r\n                <div className=\"card-collection__tabs center\">\r\n                    <BtnTab\r\n                        name=\"Items\"\r\n                        tab={tab}\r\n                        setTab={setTab}\r\n                    />\r\n                    <BtnTab\r\n                        name=\"Stats\"\r\n                        tab={tab}\r\n                        setTab={setTab}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BtnSwitchScale.css\";\r\n\r\nexport default function BtnSwitchScale({ scale, setScale }) {\r\n\r\n    const handleOnClick = e => {\r\n        setScale(Number(e.currentTarget.value));\r\n    }\r\n\r\n    return (\r\n        <div className=\"btn-switch-scale\">\r\n            <button\r\n                className={`${scale ? \"\" : \"active\"}`}\r\n                name=\"linear\"\r\n                value={0}\r\n                onClick={handleOnClick}\r\n            >lin</button>\r\n            <button\r\n                className={`${scale ? \"active\" : \"\"}`}\r\n                name=\"logarithmic\"\r\n                value={1}\r\n                onClick={handleOnClick}\r\n            >log</button>\r\n        </div>\r\n    );\r\n}\r\n","import { useRef, useEffect, useState } from \"react\";\r\nimport \"./ChartArea.css\";\r\nimport { createChart } from \"lightweight-charts\";\r\nimport { CHART_OPTIONS } from \"../../helpers/constants\";\r\nimport { intlNumFormatMaxDecimals, intlCurrNumFormat } from \"../../helpers/functions\";\r\nimport BtnSwitchScale from \"../buttons/BtnSwitchScale\";\r\n\r\nexport default function ChartArea({\r\n    type,\r\n    title,\r\n    color,\r\n    width,\r\n    data,\r\n}) {\r\n    const canvasRef = useRef(null);\r\n    const [scale, setScale] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if(!canvas) return;\r\n        if(!width) return;\r\n        if(data?.length === 0) return;\r\n\r\n        const chart = createChart(canvasRef.current, {\r\n            width: width > 803 ? (width * 0.66 - 10) : width,\r\n            height: 360\r\n        });\r\n\r\n        const areaSeries = chart.addAreaSeries();\r\n        chart.applyOptions(CHART_OPTIONS);\r\n\r\n        areaSeries.applyOptions({\r\n            topColor: `rgba(${color}, 0.15)`,\r\n            bottomColor: `rgba(${color}, 0)`,\r\n            lineColor: `rgba(${color}, 1)`,\r\n            lineStyle: 0,\r\n            lineWidth: 2,\r\n        });\r\n\r\n        if(type === \"currency\") {\r\n            areaSeries.applyOptions({\r\n                priceFormat: {\r\n                    type: 'custom',\r\n                    formatter: price => intlCurrNumFormat(price, 'BNB'),\r\n                },\r\n            });\r\n        } else {\r\n            areaSeries.applyOptions({\r\n                priceFormat: {\r\n                    type: 'custom',\r\n                    formatter: price => intlNumFormatMaxDecimals(price, 0),\r\n                },\r\n            });\r\n        }\r\n        chart.applyOptions({\r\n            priceScale: {\r\n                mode: scale\r\n            }\r\n        });\r\n        areaSeries.setData(data);\r\n        chart.timeScale().fitContent();\r\n\r\n        return () => {\r\n            if (canvas && canvas.firstChild) {\r\n                canvas.removeChild(canvas.firstChild);\r\n            }\r\n        }\r\n    }, [data, width, color, type, scale]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"chart-title\">\r\n                <h2>{title}</h2>\r\n                <BtnSwitchScale\r\n                    scale={scale}\r\n                    setScale={setScale}\r\n                />\r\n            </div>\r\n            <div ref={canvasRef} className=\"chart-area\"></div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./CardStats.css\";\r\nimport { intlNumFormatMaxDecimals } from \"../../helpers/functions\";\r\nimport binanceLogo from \"../../assets/binance-logo.webp\";\r\n\r\nexport default function CardStats({ statsData }) {\r\n    const {\r\n        items,\r\n        owners,\r\n        average,\r\n        floor,\r\n        ath,\r\n        sales_24h,\r\n        sales_7d,\r\n        sales_30d,\r\n        sales_all,\r\n        fees_24h,\r\n        fees_7d,\r\n        fees_30d,\r\n        fees,\r\n        volume_24h,\r\n        volume_7d,\r\n        volume_30d,\r\n        volume_all,\r\n        currentOwners\r\n    } = statsData;\r\n\r\n    return (\r\n        <>\r\n            {\r\n                Object.keys(statsData)?.length > 0 &&\r\n                <div className=\"card-stats\">\r\n                    <h3>Stats</h3>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Supply</div>\r\n                        <div>{intlNumFormatMaxDecimals(items, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Owners (all)</div>\r\n                        <div>{intlNumFormatMaxDecimals(owners, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Owners (current)</div>\r\n                        <div>{intlNumFormatMaxDecimals(currentOwners, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Lowest Price</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(floor, 2)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Highest Price</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(ath, 2)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Avg. Price</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(average, 2)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Sales (24h)</div>\r\n                        <div>{intlNumFormatMaxDecimals(sales_24h, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Sales (7d)</div>\r\n                        <div>{intlNumFormatMaxDecimals(sales_7d, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Sales (30d)</div>\r\n                        <div>{intlNumFormatMaxDecimals(sales_30d, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Sales (all)</div>\r\n                        <div>{intlNumFormatMaxDecimals(sales_all, 0)}</div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Fees (24h)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(fees_24h, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Fees (7d)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(fees_7d, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Fees (30d)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(fees_30d, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Fees (all)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(fees, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Volume (24h)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(volume_24h, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Volume (7d)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(volume_7d, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Volume (30d)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(volume_30d, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-stats__item\">\r\n                        <div>Volume (all)</div>\r\n                        <div className=\"card-stats__item__currency\">\r\n                            <img\r\n                                className=\"binance-logo\"\r\n                                src={binanceLogo}\r\n                                alt=\"currency\"\r\n                            ></img>\r\n                            <div>{intlNumFormatMaxDecimals(volume_all, 3)}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import \"./TabStats.css\";\r\nimport ChartArea from \"../charts/ChartArea\";\r\nimport CardStats from \"../cards/CardStats\";\r\n\r\nexport default function TabStats({\r\n    theme,\r\n    colors,\r\n    width,\r\n    statsData,\r\n    chartVolumeData,\r\n    chartSalesData,\r\n    chartOwnersData,\r\n    chartMintsData,\r\n    chartAvgData,\r\n    chartFeesData\r\n}) {\r\n\r\n    return (\r\n        <div className=\"tab-stats\">\r\n            <div className=\"tab-stats__charts\">\r\n                <div className=\"tab-stats__charts-wrapper\">\r\n                    {\r\n                        chartVolumeData?.length > 0 &&\r\n                        <ChartArea\r\n                            title=\"Volume per day\"\r\n                            color={colors[0]}\r\n                            data={chartVolumeData}\r\n                            width={width}\r\n                            type=\"currency\"\r\n                        />\r\n                    }\r\n                    {\r\n                        chartSalesData?.length > 0 &&\r\n                        <ChartArea\r\n                            title=\"Sales per day\"\r\n                            color={colors[1]}\r\n                            data={chartSalesData}\r\n                            width={width}\r\n                            type=\"number\"\r\n                        />\r\n                    }\r\n                    {\r\n                        chartFeesData?.length > 0 &&\r\n                        <ChartArea\r\n                            title=\"Fees per day\"\r\n                            color={colors[2]}\r\n                            data={chartFeesData}\r\n                            width={width}\r\n                            type=\"currency\"\r\n                        />\r\n                    }\r\n                    {\r\n                        chartAvgData?.length > 0 &&\r\n                        <ChartArea\r\n                            title=\"Average Price per day\"\r\n                            color={colors[3]}\r\n                            data={chartAvgData}\r\n                            width={width}\r\n                            type=\"currency\"\r\n                        />\r\n                    }\r\n                    {\r\n                        chartOwnersData?.length > 0 &&\r\n                        <ChartArea\r\n                            title=\"Owners per day (cumulative)\"\r\n                            color={colors[4]}\r\n                            data={chartOwnersData}\r\n                            width={width}\r\n                            type=\"number\"\r\n                        />\r\n                    }\r\n                    {\r\n                        chartMintsData?.length > 0 &&\r\n                        <ChartArea\r\n                            title=\"Supply per day (cumulative)\"\r\n                            color={colors[5]}\r\n                            data={chartMintsData}\r\n                            width={width}\r\n                            type=\"number\"\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <CardStats\r\n                    statsData={statsData}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BadgeRarity.css\";\r\nimport { intlNumFormatMaxDecimals, getColorFromRarity } from \"../../helpers/functions\";\r\n\r\nexport default function BadgeRarity({ attribute, property, rarity }) {\r\n    return (\r\n        <div className={`badge-rarity center`}>\r\n            <div>{attribute} | {property}</div>\r\n            <div className={`badge-rarity__rarity center background--${getColorFromRarity(rarity * 100)}`}>\r\n                <div>{`${intlNumFormatMaxDecimals(rarity * 100, 3)}%`}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BtnItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { intlNumFormat, intlDateFormat } from \"../../helpers/functions\";\r\nimport binanceLogo from \"../../assets/binance-logo.webp\";\r\nimport BadgeRarity from \"../badges/BadgeRarity\";\r\n\r\nexport default function BtnItem({\r\n    address,\r\n    tokenId,\r\n    name,\r\n    maxAmount,\r\n    created,\r\n    attributes,\r\n    icon\r\n}) {\r\n    return (\r\n        <Link\r\n            to={`/item/${address}/${tokenId}`}\r\n            className=\"btn-item grid--items\"\r\n        >\r\n            <img\r\n                className=\"btn-item__icon\"\r\n                src={icon}\r\n                alt={name}\r\n            ></img>\r\n            <div className=\"btn-item__token\">{`#${tokenId}`}</div>\r\n            <div className=\"btn-item__date\">{intlDateFormat(new Date(created))}</div>\r\n            <div className=\"btn-item__amount\">\r\n                <img\r\n                    className=\"binance-logo\"\r\n                    src={binanceLogo}\r\n                    alt=\"currency\"\r\n                ></img>\r\n                <div>{intlNumFormat(maxAmount)}</div>\r\n            </div>\r\n            <div className=\"btn-item__properties\">\r\n                {\r\n                    attributes?.length > 0 &&\r\n                    attributes.map((elem, index) => (\r\n                        <BadgeRarity\r\n                            key={index}\r\n                            attribute={elem.trait_type}\r\n                            property={elem.value}\r\n                            rarity={elem.rarity}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n","export default function Link() {\r\n    const strokeColor = \"var(--black)\";\r\n\r\n    return (\r\n        <svg className=\"icon\" fill=\"none\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 25 25\">\r\n            <path\r\n                d=\"M12.6408 22.9698C18.1636 22.9698 22.6408 18.4926 22.6408 12.9698C22.6408 7.44692 18.1636 2.96977 12.6408 2.96977C7.11793 2.96977 2.64078 7.44692 2.64078 12.9698C2.64078 18.4926 7.11793 22.9698 12.6408 22.9698Z\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M12.6408 16.9698V12.9698\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n                d=\"M12.6408 8.96977H12.6508\"\r\n                stroke={strokeColor}\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./InfoMsg.css\";\r\nimport Info from \"../icons/Info\";\r\n\r\nexport default function InfoMsg({ message }) {\r\n    const [showMsg, setShowMsg] = useState(false);\r\n\r\n    const handleOnMouseEnter = () => setShowMsg(true);\r\n\r\n    const handleOnMouseLeave = () => setShowMsg(false);\r\n\r\n    return (\r\n        <div\r\n            className=\"info\"\r\n            onMouseEnter={handleOnMouseEnter}\r\n            onMouseLeave={handleOnMouseLeave}\r\n        >\r\n            <Info />\r\n            {\r\n                showMsg &&\r\n                <div className=\"info__message\">{message}</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import\"./TableItems.css\";\r\nimport Pagination from \"../main/Pagination\";\r\nimport BtnItem from \"../buttons/BtnItem\";\r\nimport InfoMsg from \"./InfoMsg\";\r\nimport { getColorFromRarity } from \"../../helpers/functions\";\r\n\r\nexport default function TableItems({\r\n    address,\r\n    totalPageCount,\r\n    pageLimit,\r\n    currPage,\r\n    setCurrPage,\r\n    itemsData\r\n}) {\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <div className=\"table-list table-list--items\">\r\n                <div className=\"table-list__header grid--items\">\r\n                    <div>Item</div>\r\n                    <div>Token id</div>\r\n                    <div>Minting date</div>\r\n                    <div className=\"center\">\r\n                        <span>Max amount</span>\r\n                        <InfoMsg\r\n                            message={\r\n                                <div>\r\n                                    <div>Refers to the maximum amount the item was traded at.</div>\r\n                                    <br></br>\r\n                                    <div>Items that were only transferred have a max amount of 0.</div>\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"center\">\r\n                        <span>Trait | Property [Rarity%]</span>\r\n                        <InfoMsg\r\n                            message={\r\n                                <div>\r\n                                    <div>Rarity is highlighted as follows:</div>\r\n                                    <div className=\"legend\">\r\n                                        <div className={`background--${getColorFromRarity(0.01)}`}></div>\r\n                                        <span>less than or equal to 0.01%</span>\r\n                                    </div>\r\n                                    <div className=\"legend\">\r\n                                        <div className={`background--${getColorFromRarity(0.10)}`}></div>\r\n                                        <span>less than or equal to 0.10%</span>\r\n                                    </div>\r\n                                    <div className=\"legend\">\r\n                                        <div className={`background--${getColorFromRarity(1.00)}`}></div>\r\n                                        <span>less than or equal to 1%</span>\r\n                                    </div>\r\n                                    <div className=\"legend\">\r\n                                        <div className={`background--${getColorFromRarity(1.01)}`}></div>\r\n                                        <span>greater than 1%</span>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-list__body\">\r\n                    {\r\n                        itemsData.map((elem, index) => (\r\n                            <BtnItem\r\n                                key={index}\r\n                                address={address}\r\n                                tokenId={elem.tokenId}\r\n                                name={elem.name}\r\n                                maxAmount={elem.maxAmount}\r\n                                created={elem.created}\r\n                                attributes={elem.attributes}\r\n                                icon={elem.icon}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Pagination\r\n                    totalPageCount={totalPageCount}\r\n                    pageLimit={pageLimit}\r\n                    currPage={currPage}\r\n                    setCurrPage={setCurrPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./InputRadio.css\";\r\n\r\nexport default function InputRadio({\r\n    id,\r\n    label,\r\n    checked,\r\n    itemsSortBy,\r\n    setItemsSortBy\r\n}) {\r\n\r\n    const handleOnChange = e => {\r\n        // Using the id as index\r\n        const id = Number(e.target.id);\r\n        const newItemsSortBy = [];\r\n        itemsSortBy.forEach((elem, index) => {\r\n            newItemsSortBy.push({\r\n                ...elem,\r\n                checked: id === index ? true : false\r\n            });\r\n        });\r\n        setItemsSortBy(newItemsSortBy);\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-radio\">\r\n            <label\r\n                className=\"input-radio__label\"\r\n            >{label}\r\n                <input\r\n                    id={id}\r\n                    checked={checked}\r\n                    type=\"radio\"\r\n                    name=\"radio\"\r\n                    onChange={handleOnChange}\r\n                ></input>\r\n                <span className=\"checkmark\"></span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./BtnItemsSort.css\";\r\nimport ArrowDown from \"../icons/ArrowDown\";\r\nimport ArrowUp from \"../icons/ArrowUp\";\r\nimport InputRadio from \"../inputs/InputRadio\";\r\n\r\nexport default function BtnItemsSort({ itemsSortBy, setItemsSortBy }) {\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const handleOnClick = () => setShowOptions(prev => !prev);\r\n\r\n    return (\r\n        <div className=\"btn-items-sort-wrapper\">\r\n            <div\r\n                className=\"btn-items-sort\"\r\n                onClick={handleOnClick}\r\n            >\r\n                <h4>Sort by</h4>\r\n                {\r\n                    !showOptions &&\r\n                    <ArrowDown />\r\n                }\r\n                {\r\n                    showOptions &&\r\n                    <ArrowUp />\r\n                }\r\n            </div>\r\n            {\r\n                showOptions &&\r\n                <div className=\"btn-items-sort__options\">\r\n                    {\r\n                        itemsSortBy?.length > 0 &&\r\n                        itemsSortBy.map((elem, index) => (\r\n                            <InputRadio\r\n                                id={elem.id}\r\n                                key={index}\r\n                                label={elem.label}\r\n                                checked={elem.checked}\r\n                                itemsSortBy={itemsSortBy}\r\n                                setItemsSortBy={setItemsSortBy}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import \"./InputSlider.css\";\r\nimport ReactSlider from \"react-slider\";\r\n\r\nexport default function InputSlider({\r\n    minAmount,\r\n    maxAmount,\r\n    sliderValue,\r\n    setSliderValue\r\n}) {\r\n\r\n    const handleOnChangeAfter = (value, index) => {\r\n        document.getElementsByClassName(`input-slider__thumb-${index}`)[0].blur();\r\n        setSliderValue(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-slider\">\r\n            <h4>Amount Traded</h4>\r\n            <ReactSlider\r\n                value={sliderValue}\r\n                min={minAmount}\r\n                max={maxAmount}\r\n                minDistance={0.1}\r\n                step={1}\r\n                onAfterChange={handleOnChangeAfter}\r\n                className=\"horizontal-slider\"\r\n                trackClassName=\"input-slider__track\"\r\n                thumbActiveClassName=\"input-slider__thumb-active\"\r\n                thumbClassName=\"input-slider__thumb\"\r\n                renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./InputCheckbox.css\";\r\nimport ArrowDown from \"../icons/ArrowDown\";\r\nimport ArrowUp from \"../icons/ArrowUp\";\r\n\r\nexport default function InputCheckbox({\r\n    attribute,\r\n    properties,\r\n    attributesData,\r\n    setAttributesData\r\n}) {\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const handleOnChange = e => {\r\n        // Using the id as index\r\n        const id = Number(e.target.id);\r\n        const checked = e.target.checked;\r\n        const oldAttribute = attributesData.find(elem => elem.attribute === attribute);\r\n        const property = oldAttribute.properties[id];\r\n        const newProperties = [...properties];\r\n\r\n        newProperties[id] = {\r\n            ...property,\r\n            checked: checked\r\n        }\r\n\r\n        const newAttribute = {\r\n            ...oldAttribute,\r\n            properties: newProperties\r\n        }\r\n\r\n        const newAttributeData = [...attributesData];\r\n        newAttributeData[newAttribute.id] = newAttribute;\r\n\r\n        setAttributesData(newAttributeData);\r\n    }\r\n\r\n    const handleOnClick = () => setShowOptions(prev => !prev);\r\n\r\n    return (\r\n        <div className=\"input-checkbox\">\r\n            <div\r\n                className=\"input-checkbox__trait\"\r\n                onClick={handleOnClick}\r\n            >\r\n                <h4>{attribute}</h4>\r\n                {\r\n                    !showOptions &&\r\n                    <ArrowDown />\r\n                }\r\n                {\r\n                    showOptions &&\r\n                    <ArrowUp />\r\n                }\r\n            </div>\r\n            {\r\n                showOptions &&\r\n                <div className=\"input-checkbox__options\">\r\n                    {\r\n                        properties?.length > 0 &&\r\n                        properties.map((elem, index) => (\r\n                            <label\r\n                                key={index}\r\n                                className=\"input-checkbox__label\"\r\n                            >{elem.property}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    onChange={handleOnChange}\r\n                                    id={elem.id}\r\n                                    checked={elem.checked}\r\n                                ></input>\r\n                                <span className=\"checkmark\"></span>\r\n                                <span className=\"count\">({elem.count})</span>\r\n                            </label>\r\n                        ))\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import \"./BtnRemoveFilter.css\";\r\nimport Close from \"../icons/Close\";\r\n\r\nexport default function BtnRemoveFilter({\r\n    attributeId,\r\n    attribute,\r\n    propertyId,\r\n    property,\r\n    attributesData,\r\n    setAttributesData\r\n}) {\r\n    const handleOnClick = () => {\r\n        const oldAttribute = attributesData[attributeId];\r\n        const property = oldAttribute.properties[propertyId];\r\n        const newProperties = [...oldAttribute.properties];\r\n\r\n        newProperties[propertyId] = {\r\n            ...property,\r\n            checked: false\r\n        }\r\n\r\n        const newAttribute = {\r\n            ...oldAttribute,\r\n            properties: newProperties\r\n        }\r\n\r\n        const newAttributeData = [...attributesData];\r\n        newAttributeData[attributeId] = newAttribute;\r\n\r\n        setAttributesData(newAttributeData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"btn-remove-filter\">\r\n            <div>{`${attribute} | ${property}`}</div>\r\n            <button className=\"center\" onClick={handleOnClick}>\r\n                <Close />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BtnRemoveAmountFilter.css\";\r\nimport Close from \"../icons/Close\";\r\n\r\nexport default function BtnRemoveAmountFilter({\r\n    minAmount,\r\n    maxAmount,\r\n    sliderValue,\r\n    setSliderValue\r\n}) {\r\n\r\n    const handleOnClick = () => setSliderValue([minAmount, maxAmount]);\r\n\r\n    return (\r\n        <div className=\"btn-remove-amount-filter\">\r\n            <div>{`Amount [${sliderValue[0]} - ${sliderValue[1]}]`}</div>\r\n            <button className=\"center\" onClick={handleOnClick}>\r\n                <Close />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","import \"./InputControl.css\";\r\nimport BtnItemsSort from \"../buttons/BtnItemsSort\";\r\nimport InputSlider from \"../inputs/InputSlider\";\r\nimport InputCheckbox from \"../inputs/InputCheckbox\";\r\nimport BtnRemoveFilter from \"../buttons/BtnRemoveFilter\";\r\nimport BtnRemoveAmountFilter from \"../buttons/BtnRemoveAmountFilter\";\r\n\r\nexport default function InputControl({\r\n    attributesData,\r\n    setAttributesData,\r\n    sliderValue,\r\n    setSliderValue,\r\n    activeFilters,\r\n    minAmount,\r\n    maxAmount,\r\n    itemsSortBy,\r\n    setItemsSortBy\r\n}) {\r\n\r\n    return (\r\n        <div className=\"input-control\">\r\n            <div className=\"input-control__active-filters\">\r\n                <h4>Active Filters</h4>\r\n                {\r\n                    ((sliderValue[0] !== minAmount) || (sliderValue[1] !== maxAmount)) &&\r\n                    <BtnRemoveAmountFilter\r\n                        minAmount={minAmount}\r\n                        maxAmount={maxAmount}\r\n                        sliderValue={sliderValue}\r\n                        setSliderValue={setSliderValue}\r\n                    />\r\n                }\r\n                {\r\n                    activeFilters?.length > 0 &&\r\n                    activeFilters.map((elem, index) => (\r\n                        <BtnRemoveFilter\r\n                            key={index}\r\n                            attributeId={elem.attributeId}\r\n                            attribute={elem.attribute}\r\n                            propertyId={elem.propertyId}\r\n                            property={elem.property}\r\n                            attributesData={attributesData}\r\n                            setAttributesData={setAttributesData}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <BtnItemsSort\r\n                itemsSortBy={itemsSortBy}\r\n                setItemsSortBy={setItemsSortBy}\r\n            />\r\n            <InputSlider\r\n                minAmount={minAmount}\r\n                maxAmount={maxAmount}\r\n                sliderValue={sliderValue}\r\n                setSliderValue={setSliderValue}\r\n            />\r\n            {\r\n                attributesData?.length > 0 &&\r\n                attributesData.map((elem, index) => (\r\n                    <InputCheckbox\r\n                        key={index}\r\n                        attribute={elem.attribute}\r\n                        properties={elem.properties}\r\n                        attributesData={attributesData}\r\n                        setAttributesData={setAttributesData}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import \"./TabItems.css\";\r\nimport TableItems from \"../main/TableItems\";\r\nimport InputControl from \"../main/InputControl\";\r\n\r\nexport default function TabItems({\r\n    address,\r\n    totalPageCount,\r\n    pageLimit,\r\n    currPage,\r\n    setCurrPage,\r\n    itemsData,\r\n    attributesData,\r\n    setAttributesData,\r\n    sliderValue,\r\n    setSliderValue,\r\n    activeFilters,\r\n    minAmount,\r\n    maxAmount,\r\n    filteredItemsData,\r\n    itemsSortBy,\r\n    setItemsSortBy\r\n}) {\r\n    return (\r\n        <div className=\"tab-items global-width\">\r\n            <h1>Collection items</h1>\r\n            <div className=\"tab-items__filters\">\r\n                <InputControl\r\n                    attributesData={attributesData}\r\n                    sliderValue={sliderValue}\r\n                    minAmount={minAmount}\r\n                    maxAmount={maxAmount}\r\n                    activeFilters={activeFilters}\r\n                    setSliderValue={setSliderValue}\r\n                    setAttributesData={setAttributesData}\r\n                    itemsSortBy={itemsSortBy}\r\n                    setItemsSortBy={setItemsSortBy}\r\n                />\r\n                {\r\n                    itemsData?.length > 0 &&\r\n                    <TableItems\r\n                        address={address}\r\n                        totalPageCount={totalPageCount}\r\n                        pageLimit={pageLimit}\r\n                        currPage={currPage}\r\n                        setCurrPage={setCurrPage}\r\n                        itemsData={itemsData}\r\n                    />\r\n                }\r\n                {\r\n                    filteredItemsData?.length === 0 &&\r\n                    <h3 className=\"tab-items__result\">No items found.</h3>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    getCollectionDetails,\r\n    getItemsData,\r\n    getStatsData,\r\n    getChartVolumeData,\r\n    getChartSalesData,\r\n    getChartOwnersData,\r\n    getChartMintsData,\r\n    getChartAvgData,\r\n    getChartFeesData\r\n} from \"../../api\";\r\nimport { CHART_COLORS } from \"../../helpers/constants\";\r\nimport {\r\n    DEBOUNCE_DELAY,\r\n    PAGE_LIMIT,\r\n    SLIDER_MAX,\r\n    INITIAL_ITEMS_SORT_BY\r\n} from \"../../helpers/constants\";\r\nimport { debounce } from \"lodash\";\r\nimport Error from \"../main/Error\";\r\nimport Loading from \"../main/Loading\";\r\nimport BtnCrum from \"../buttons/BtnCrum\";\r\nimport CardCollection from \"../cards/CardCollection\";\r\nimport TabStats from \"../tabs/TabStats\";\r\nimport TabItems from \"../tabs/TabItems\";\r\n\r\nexport default function Collection() {\r\n    const address = useParams()[\"address\"];\r\n    const chartWrapperRef = useRef(null);\r\n    const [width, setWidth] = useState(0);\r\n    const [tab, setTab] = useState(\"Items\");\r\n    const [minAmount, setMinAmount] = useState(0);\r\n    const [maxAmount, setMaxAmount] = useState(0);\r\n    // ~~~ Data ~~~\r\n    const [collectionDetails, setCollectionDetails] = useState({});\r\n    const [rawItemsData, setRawItemsData] = useState([]);\r\n    const [statsData, setStatsData] = useState({});\r\n    const [itemsData, setItemsData] = useState([]);\r\n    const [chartVolumeData, setChartVolumeData] = useState([]);\r\n    const [chartSalesData, setChartSalesData] = useState([]);\r\n    const [chartOwnersData, setChartOwnersData] = useState([]);\r\n    const [chartMintsData, setChartMintsData] = useState([]);\r\n    const [chartAvgData, setChartAvgData] = useState([]);\r\n    const [chartFeesData, setChartFeesData] = useState([]);\r\n    const [rawAttributesData, setRawAttributesData] = useState([]);\r\n    const [attributesData, setAttributesData] = useState([]);\r\n    const [sliderValue, setSliderValue] = useState([0, SLIDER_MAX]);\r\n    // ~~~ Data manipulation ~~~\r\n    const [filteredItemsData, setFilteredItemsData] = useState([]);\r\n    const [sortedItemsData, setSortedItemsData] = useState([]);\r\n    // ~~~ Filtering and sorting ~~~\r\n    const [activeFilters, setActiveFilters] = useState([]);\r\n    const [itemsSortBy, setItemsSortBy] = useState([...INITIAL_ITEMS_SORT_BY]);\r\n    // ~~~ Keeping tabs on loading and error ~~~\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        error: \"\"\r\n    });\r\n    // ~~~ Params for calling APIs (to be implemented) ~~~\r\n    const [totalPageCount, setTotalPageCount] = useState(0);\r\n    const [currPage, setCurrPage] = useState(1);\r\n\r\n    // ~~~ Observer that reads with on resize to set width for charts ~~~\r\n    useEffect(() => {\r\n        const debouncedHandleObserver = debounce(entries => {\r\n            const newWidth = entries[0].contentRect.width;\r\n            setWidth(newWidth);\r\n        }, DEBOUNCE_DELAY);\r\n\r\n        const elem = chartWrapperRef?.current;\r\n        const observer = new ResizeObserver(debouncedHandleObserver);\r\n\r\n        \r\n        if(elem) {\r\n            observer.observe(elem);\r\n        }\r\n\r\n        return () => {\r\n            observer.unobserve(elem);\r\n        }\r\n    }, []);\r\n\r\n    // ~~~ API calls ~~~\r\n    // ~~~ Fetching data for Collection Details ~~~\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getCollectionDetails(address);\r\n                    setCollectionDetails(response);\r\n                } catch (err) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: err.message\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n            reset();\r\n        }\r\n    }, [address]);\r\n\r\n    // ~~~ Fetching data for Items Table ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Items\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getItemsData(address);\r\n                    const amounts = response.nfts.map(elem => elem.maxAmount);\r\n                    const min = Math.floor(Math.min(...amounts));\r\n                    const max = Math.ceil(Math.max(...amounts));\r\n\r\n                    setRawItemsData(response.nfts);\r\n                    setRawAttributesData(response.attributes);\r\n                    setMinAmount(min);\r\n                    setMaxAmount(max);\r\n                    setSliderValue([min, max]);\r\n                } catch (err) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: err.message\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n            setState({\r\n                loading: true,\r\n                error: \"\"\r\n            });\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Compute properties for creating inputs ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Items\") return;\r\n        if(rawAttributesData?.length === 0) return;\r\n\r\n        const updatedAttributes = [];\r\n        rawAttributesData.forEach((elem, index) => {\r\n            const properties = [];\r\n            const keys = Object.keys(elem.values);\r\n\r\n            keys.forEach((key, index) => {\r\n                properties.push({\r\n                    id: index,\r\n                    property: key,\r\n                    count: elem.values[key],\r\n                    checked: false\r\n                });\r\n            });\r\n\r\n            updatedAttributes.push({\r\n                id: index,\r\n                attribute: elem.name,\r\n                properties: properties\r\n            });\r\n        });\r\n\r\n        setAttributesData(updatedAttributes);\r\n    }, [rawAttributesData, tab]);\r\n\r\n    // ~~~ Update active filter on attributes data change ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Items\") return;\r\n        if(attributesData?.length === 0) return;\r\n\r\n        const newFilters = [];\r\n        attributesData.forEach(attribute => {\r\n            attribute.properties.forEach(property => {\r\n                if(property.checked) {\r\n                    newFilters.push({\r\n                        attributeId: attribute.id,\r\n                        attribute: attribute.attribute,\r\n                        propertyId: property.id,\r\n                        property: property.property\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        setActiveFilters(newFilters);\r\n    }, [attributesData, tab]);\r\n\r\n    // ~~~ Filtering ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Items\") return;\r\n        let updatedFilteredData = [];\r\n        // Filter based on active filters\r\n        if(activeFilters?.length === 0) {\r\n            updatedFilteredData = [...rawItemsData];\r\n        } else {\r\n            const found = [];\r\n            for(let i = 0; i < rawItemsData.length; i++) {\r\n                const attributes = rawItemsData[i].attributes;\r\n                let item;\r\n                if(attributes) {\r\n                    activeFilters.forEach(filter => {\r\n                        // Check if already exists\r\n                        if(!item) {\r\n                            const result = attributes.find(elem => {\r\n                                return elem.trait_type === filter.attribute &&\r\n                                       elem.value === filter.property;\r\n                            });\r\n                            if(result) {\r\n                                item = rawItemsData[i];\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                if(item) {\r\n                    found.push(item);\r\n                }\r\n            }\r\n            updatedFilteredData = [...found];\r\n        }\r\n        // Filter based on amount traded\r\n        if((sliderValue[0] !== minAmount) || (sliderValue[1] !== maxAmount)) {\r\n            updatedFilteredData = updatedFilteredData.filter(elem =>{\r\n                return  elem.maxAmount >= sliderValue[0] &&\r\n                        elem.maxAmount <= sliderValue[1];\r\n            });\r\n            \r\n        }\r\n\r\n        setCurrPage(1);\r\n        setFilteredItemsData(updatedFilteredData);\r\n    }, [rawItemsData, activeFilters, sliderValue, minAmount, maxAmount, tab]);\r\n\r\n    // ~~~ Sorting ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Items\") return;\r\n        // Sort data displayed in Items Table\r\n        const sortedData = [...filteredItemsData];\r\n        const sortBy = itemsSortBy.find(elem => elem.checked);\r\n        const column = sortBy ? sortBy.column : \"tokenId\";\r\n\r\n        if(column !== \"created\") {\r\n            sortedData.sort((a, b) => {\r\n                if(sortBy.ascending) {\r\n                    return a[column] - b[column];\r\n                } else {\r\n                    return b[column] - a[column];\r\n                }\r\n            });\r\n        } else {\r\n            sortedData.sort((a, b) => {\r\n                return new Date(b[column]) - new Date(a[column]);\r\n            });\r\n        }\r\n    \r\n        setSortedItemsData(sortedData);\r\n    }, [itemsSortBy, filteredItemsData, tab]);\r\n\r\n    // ~~~ Update items data on pagination change ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Items\") return;\r\n\r\n        const start = (currPage - 1) * PAGE_LIMIT;\r\n        const end = start + PAGE_LIMIT;\r\n        const slicedItemsData = [...sortedItemsData].slice(start, end);\r\n        const updatedItemsData = [...slicedItemsData];\r\n        // Compute rarity\r\n        updatedItemsData.forEach(item => {\r\n            const attributes = item.attributes;\r\n            attributes.forEach(attribute => {\r\n                const foundAttribute = attributesData.find(elem => elem.attribute === attribute.trait_type);\r\n                const foundProperty = foundAttribute.properties.find(elem => {\r\n                    return elem.property === attribute.value;\r\n                });\r\n                const rarity = foundProperty.count / rawItemsData.length;\r\n                attribute.rarity = rarity;\r\n            });\r\n        });\r\n\r\n        setItemsData(updatedItemsData);\r\n        setTotalPageCount(sortedItemsData.length);\r\n    }, [sortedItemsData, currPage, rawItemsData, attributesData, tab]);\r\n\r\n    // ~~~ Fetching data for Stats ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getStatsData(address);\r\n                    setStatsData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Fetching data for Volume chart ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getChartVolumeData(address);\r\n                    setChartVolumeData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Fetching data for Sales chart ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getChartSalesData(address);\r\n                    setChartSalesData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Fetching data for Owners chart ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getChartOwnersData(address);\r\n                    setChartOwnersData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Fetching data for Mints chart ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getChartMintsData(address);\r\n                    setChartMintsData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Fetching data for Avg price chart ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getChartAvgData(address);\r\n                    setChartAvgData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Fetching data for Fees chart ~~~\r\n    useEffect(() => {\r\n        if(tab !== \"Stats\") return;\r\n\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const response = await getChartFeesData(address);\r\n                    setChartFeesData(response);\r\n                } catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [address, tab]);\r\n\r\n    // ~~~ Update Loading and Error ~~~\r\n    useEffect(() => {\r\n        if(tab === \"Items\") {\r\n            collectionDetails[\"name\"] &&\r\n            rawItemsData.length > 0 &&\r\n            attributesData.length > 0 &&\r\n            setState({\r\n                loading: false,\r\n                error: \"\"\r\n            });\r\n        } else if(tab === \"Stats\") {\r\n            collectionDetails[\"name\"] &&\r\n            statsData[\"items\"] &&\r\n            setState({\r\n                loading: false,\r\n                error: \"\"\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            setState({\r\n                loading: true,\r\n                error: \"\"\r\n            });\r\n        }\r\n    }, [collectionDetails, filteredItemsData, statsData, chartVolumeData, chartSalesData, chartOwnersData, chartMintsData, chartAvgData, rawItemsData, attributesData, tab]);\r\n\r\n    const reset = () => {\r\n        setMinAmount(0);\r\n        setMaxAmount(0);\r\n        setCollectionDetails({});\r\n        setRawItemsData([]);\r\n        setStatsData({});\r\n        setItemsData([]);\r\n        setChartVolumeData([]);\r\n        setChartSalesData([]);\r\n        setChartOwnersData([]);\r\n        setChartMintsData([]);\r\n        setChartAvgData([]);\r\n        setChartFeesData([]);\r\n        setRawAttributesData([]);\r\n        setAttributesData([]);\r\n        setSliderValue([0, SLIDER_MAX]);\r\n        setFilteredItemsData([]);\r\n        setSortedItemsData([]);\r\n        setActiveFilters([]);\r\n        setItemsSortBy([...INITIAL_ITEMS_SORT_BY]);\r\n        setState({\r\n            loading: true,\r\n            error: \"\"\r\n        });\r\n        setTotalPageCount(0);\r\n        setCurrPage(1);\r\n    }\r\n\r\n    if(state.error) return (\r\n        <section>\r\n            <div ref={chartWrapperRef} className=\"wrapper global-width\">\r\n                <Error message={state.error} />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    if(state.loading) return (\r\n        <section>\r\n            <div ref={chartWrapperRef} className=\"wrapper global-width\">\r\n                <Loading />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <div ref={chartWrapperRef} className=\"wrapper global-width\">\r\n                <div className=\"breadcrum\">\r\n                    <BtnCrum path=\"\" label=\"Collections\"/>\r\n                    {\r\n                        collectionDetails[\"name\"] &&\r\n                        <div>{collectionDetails[\"name\"]}</div>\r\n                    }\r\n                </div>\r\n                {\r\n                    collectionDetails[\"name\"] &&\r\n                    <CardCollection\r\n                        collectionDetails={collectionDetails}\r\n                        tab={tab}\r\n                        setTab={setTab}\r\n                    />\r\n                }\r\n                {\r\n                    tab === \"Stats\" &&\r\n                    <TabStats\r\n                        colors={CHART_COLORS}\r\n                        width={width}\r\n                        statsData={statsData}\r\n                        chartVolumeData={chartVolumeData}\r\n                        chartSalesData={chartSalesData}\r\n                        chartOwnersData={chartOwnersData}\r\n                        chartMintsData={chartMintsData}\r\n                        chartAvgData={chartAvgData}\r\n                        chartFeesData={chartFeesData}\r\n                    />\r\n                }\r\n            </div>\r\n            {\r\n                tab === \"Items\" &&\r\n                <TabItems\r\n                    address={address}\r\n                    totalPageCount={totalPageCount}\r\n                    pageLimit={PAGE_LIMIT}\r\n                    currPage={currPage}\r\n                    itemsSortBy={itemsSortBy}\r\n                    itemsData={itemsData}\r\n                    attributesData={attributesData}\r\n                    minAmount={minAmount}\r\n                    maxAmount={maxAmount}\r\n                    filteredItemsData={filteredItemsData}\r\n                    sliderValue={sliderValue}\r\n                    activeFilters={activeFilters}\r\n                    setItemsSortBy={setItemsSortBy}\r\n                    setCurrPage={setCurrPage}\r\n                    setAttributesData={setAttributesData}\r\n                    setSliderValue={setSliderValue}\r\n                />\r\n            }\r\n        </section>\r\n    );\r\n}\r\n","import \"./CardItem.css\";\r\nimport { trimAddress } from \"../../helpers/functions\";\r\nimport BadgeRarity from \"../badges/BadgeRarity\";\r\n\r\nexport default function CardItem({ itemData }) {\r\n    return (\r\n        <div className=\"card-item\">\r\n            <img src={itemData[\"image\"]} alt=\"token\"></img>\r\n            <div className=\"card-item__stats\">\r\n                <div className=\"grid--item\">\r\n                    <div>Contract</div>\r\n                    <a\r\n                        href={`https://bscscan.com/address/${itemData[\"address\"]}`}\r\n                        rel=\"noreferrer\"\r\n                        target=\"_blank\"\r\n                    >{trimAddress(itemData[\"address\"])}</a>\r\n                </div>\r\n                <div className=\"grid--item\">\r\n                    <div>Collection</div>\r\n                    <div>{itemData[\"collection\"]}</div>\r\n                </div>\r\n                <div className=\"grid--item\">\r\n                    <div>Description</div>\r\n                    <div>{itemData[\"description\"]}</div>\r\n                </div>\r\n                <div className=\"grid--item\">\r\n                    <div>Trait | Property [Rarity]%</div>\r\n                    <div className=\"card-item__traits\">\r\n                        {\r\n                            itemData[\"attributes\"]?.length > 0 &&\r\n                            itemData[\"attributes\"].map((elem, index) => (\r\n                                <BadgeRarity\r\n                                    key={index}\r\n                                    attribute={elem.trait_type}\r\n                                    property={elem.value}\r\n                                    rarity={elem.rarity}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BtnTransaction.css\";\r\nimport { intlNumFormatMaxDecimals, trimAddress, intlDateFormat } from \"../../helpers/functions\";\r\nimport binanceLogo from \"../../assets/binance-logo.webp\";\r\n\r\nexport default function BtnTransaction({\r\n    tx_hash,\r\n    block_signed_at,\r\n    from,\r\n    to,\r\n    val,\r\n    fee\r\n}) {\r\n    return (\r\n        <a\r\n            className=\"btn-transaction grid--transactions\"\r\n            href={`https://bscscan.com/tx/${tx_hash}`}\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n        >\r\n            <div>{trimAddress(tx_hash)}</div>\r\n            <div>{intlDateFormat(block_signed_at)}</div>\r\n            <div>{trimAddress(from)}</div>\r\n            <div>{trimAddress(to)}</div>\r\n            <div className=\"btn-transaction__currency\">\r\n                <img\r\n                    className=\"binance-logo\"\r\n                    src={binanceLogo}\r\n                    alt=\"currency\"\r\n                ></img>\r\n                <div>{intlNumFormatMaxDecimals(val, 3)}</div>\r\n            </div>\r\n            <div className=\"btn-transaction__currency\">\r\n                <img\r\n                    className=\"binance-logo\"\r\n                    src={binanceLogo}\r\n                    alt=\"currency\"\r\n                ></img>\r\n                <div>{intlNumFormatMaxDecimals(fee, 3)}</div>\r\n            </div>\r\n        </a>\r\n    );\r\n}\r\n","import \"./TableTransactions.css\";\r\nimport BtnTransaction from \"../buttons/BtnTransaction\";\r\n\r\nexport default function TableTransactions({ transactions }) {\r\n    return (\r\n        <div className=\"table\">\r\n            <div className=\"table-list table-list--transactions\">\r\n                <div className=\"table-list__header grid--transactions\">\r\n                    <div>Tx hash</div>\r\n                    <div>Date</div>\r\n                    <div>From</div>\r\n                    <div>To</div>\r\n                    <div>Amount</div>\r\n                    <div>Fee</div>\r\n                </div>\r\n                <div className=\"table-list__body\">\r\n                    {\r\n                        transactions.map((elem, index) => (\r\n                            <BtnTransaction\r\n                                key={index}\r\n                                tx_hash={elem.tx_hash}\r\n                                block_signed_at={new Date(elem.block_signed_at)}\r\n                                from={elem.from}\r\n                                to={elem.to}\r\n                                val={elem.val}\r\n                                fee={elem.fee}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getItemData, getItemsData } from \"../../api\";\r\nimport Error from \"../main/Error\";\r\nimport Loading from \"../main/Loading\";\r\nimport BtnCrum from \"../buttons/BtnCrum\";\r\nimport CardItem from \"../cards/CardItem\";\r\nimport TableTransactions from \"../main/TableTransactions\";\r\n\r\nexport default function Item() {\r\n    const address = useParams()[\"address\"];\r\n    const tokenId = useParams()[\"token\"];\r\n    // ~~~ Data ~~~\r\n    const [itemData, setItemData] = useState({});\r\n    // ~~~ Keeping tabs on loading and error ~~~\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        error: \"\"\r\n    });\r\n\r\n    // ~~~ API calls ~~~\r\n    // ~~~ Fetching data for Collection Details ~~~\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        (async () => {\r\n            if (mounted) {\r\n                try {\r\n                    const promise1 = getItemData(address, tokenId);\r\n                    const promise2 = getItemsData(address);\r\n                    const [response1, response2] = await Promise.all([promise1, promise2]);\r\n                    const attributesData = response2.attributes;\r\n\r\n                    // Compute rarity\r\n                    response1.attributes?.length > 0 &&\r\n                    response1.attributes.forEach(attribute => {\r\n                        const foundAttribute = attributesData.find(elem => elem.name === attribute.trait_type);\r\n                        const count = foundAttribute.values[attribute.value];\r\n                        const rarity = count / response2.nfts.length;\r\n                        attribute.rarity = rarity;\r\n                    });\r\n                    setItemData(response1);\r\n                    setState({\r\n                        loading: false,\r\n                        error: \"\"\r\n                    });\r\n                } catch (err) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: err.message\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            mounted = false;\r\n            reset();\r\n        }\r\n    }, [address, tokenId]);\r\n\r\n    const reset = () => {\r\n        setItemData({});\r\n        setState({\r\n            loading: true,\r\n            error: \"\"\r\n        });\r\n    }\r\n\r\n    if(state.error) return (\r\n        <section>\r\n            <div className=\"wrapper global-width\">\r\n                <Error message={state.error} />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    if(state.loading) return (\r\n        <section>\r\n            <div className=\"wrapper global-width\">\r\n                <Loading />\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"wrapper global-width\">\r\n                <div className=\"breadcrum\">\r\n                    <BtnCrum path=\"\" label=\"Collections\"/>\r\n                    <BtnCrum path={`collection/${address}`} label={itemData[\"collection\"]}/>\r\n                    {\r\n                        itemData[\"collection\"] &&\r\n                        <div>{itemData[\"name\"]}</div>\r\n                    }\r\n                </div>\r\n                {\r\n                    itemData[\"name\"] &&\r\n                    <h1>{`${itemData[\"name\"]}`}</h1>\r\n                }\r\n                <CardItem\r\n                    address={address}\r\n                    tokenId={tokenId}\r\n                    itemData={itemData}\r\n                />\r\n            </div>\r\n            {\r\n                itemData[\"transactions\"]?.length &&\r\n                <div className=\"item-wrapper\">\r\n                    <h2>Transactions</h2>\r\n                    <TableTransactions\r\n                        transactions={itemData[\"transactions\"]}\r\n                    />\r\n                </div>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport DataProvider from \"../context/DataContext\";\r\nimport Header from \"./main/Header\";\r\nimport Home from \"./pages/Home\";\r\nimport List from \"./pages/List\";\r\nimport Rich from \"./pages/Rich\";\r\nimport Collection from \"./pages/Collection\";\r\nimport Item from \"./pages/Item\";\r\n\r\nfunction App() {\r\n    return (\r\n        <DataProvider>\r\n            <Router>\r\n                <Header />\r\n                <main>\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/\"\r\n                            component={Home}\r\n                            label=\"Home\"\r\n                            exact\r\n                        />\r\n                        <Route\r\n                            path=\"/list\"\r\n                            component={List}\r\n                            label=\"List\"\r\n                            exact\r\n                        />\r\n                        <Route\r\n                            path=\"/rich\"\r\n                            component={Rich}\r\n                            label=\"Rich List\"\r\n                            exact\r\n                        />\r\n                        <Route\r\n                            path=\"/collection/:address\"\r\n                            component={Collection}\r\n                            label=\"Collection\"\r\n                            exact\r\n                        />\r\n                        <Route\r\n                            path=\"/item/:address/:token\"\r\n                            component={Item}\r\n                            label=\"Item\"\r\n                            exact\r\n                        />\r\n                    </Switch>\r\n                </main>\r\n            </Router>\r\n        </DataProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}